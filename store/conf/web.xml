<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010 Zimbra, Inc.
SPDX-FileCopyrightText: 2022 Zextras <https://www.zextras.com>

SPDX-License-Identifier: AGPL-3.0-only
-->

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0">

  <display-name>Carbonio SOAP Service</display-name>
  <description>SOAP Service</description>

  <filter>
    <filter-name>guiceFilter</filter-name>
    <filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>guiceFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <listener>
    <listener-class>com.zextras.mailbox.servlet.GuiceMailboxServletConfig</listener-class>
  </listener>
  <filter>
    <filter-name>DoSFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.DoSFilter</filter-class>
    <async-supported>true</async-supported>

    <init-param>
      <param-name>delayMs</param-name>
      <param-value>-1</param-value>
    </init-param>

    <init-param>
      <param-name>maxRequestsPerSec</param-name>
      <param-value>30</param-value>
    </init-param>

    <init-param>
      <param-name>remotePort</param-name>
      <param-value>true</param-value>
    </init-param>

    <init-param>
      <param-name>maxRequestMs</param-name>
      <param-value>9223372036854775807</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>DoSFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>ZimbraInvalidLoginFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.ZimbraInvalidLoginFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>ZimbraInvalidLoginFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>ZimbraQoSFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.ZimbraQoSFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>ZimbraQoSFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>ContextPathBasedThreadPoolBalancerFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.ContextPathBasedThreadPoolBalancerFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>suspendMs</param-name>
      <param-value>1000</param-value>
    </init-param>
    <init-param>
      <param-name>Rules</param-name>
      <param-value>/service:max=10%, /soap:max=40%, /zimbra:max=40%</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>ContextPathBasedThreadPoolBalancerFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>ETagHeaderFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.ETagHeaderFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>ETagHeaderFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>SpnegoFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.SpnegoFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>passThruOnFailureUri</param-name>
      <param-value>/service/spnego</param-value>
    </init-param>
    <init-param>
      <param-name>error401Page</param-name>
      <param-value>/spnego/error401.jsp</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>SpnegoFilter</filter-name>
    <url-pattern>/spnego/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>SetHeaderFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.SetHeaderFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>SetHeaderFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>Base64Filter</filter-name>
    <filter-class>com.zimbra.common.filters.Base64Filter</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>Base64Filter</filter-name>
    <url-pattern>/user/*</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>Base64Filter</filter-name>
    <url-pattern>/home/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>RequestStringFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.RequestStringFilter</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>RequestStringFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>CsrfFilter</filter-name>
    <filter-class>com.zimbra.cs.servlet.CsrfFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>csrf.req.check</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <!-- A comma separated list like www.abc.com, www.xyz.com -->
      <param-name>allowed.referrer.host</param-name>
      <param-value />
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>CsrfFilter</filter-name>
    <url-pattern>/admin/soap/*</url-pattern>
    <url-pattern>/soap/*</url-pattern>
    <url-pattern>/user/*</url-pattern>
    <url-pattern>/home/*</url-pattern>
    <url-pattern>/upload</url-pattern>
    <url-pattern>/extension/*</url-pattern>
  </filter-mapping>

  <servlet>
    <servlet-name>ExtensionDispatcherServlet</servlet-name>
    <servlet-class>com.zimbra.cs.extension.ExtensionDispatcherServlet</servlet-class>
    <async-supported>true</async-supported>
    <load-on-startup>2</load-on-startup>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7071, 7072, 7443</param-value>
    </init-param>
  </servlet>


  <servlet>
    <servlet-name>WsdlServlet</servlet-name>
    <servlet-class>com.zimbra.soap.WsdlServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>ContentServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.ContentServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
    <init-param>
      <param-name>errorpage.attachment.blocked</param-name>
      <param-value>/error/attachment_blocked.jsp</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>UserServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.UserServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
    <init-param>
      <param-name>errorpage.attachment.blocked</param-name>
      <param-value>/error/attachment_blocked.jsp</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>PreAuthServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.servlet.preauth.PreAuthServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>ExternalUserProvServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.ExternalUserProvServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>CertAuthServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.CertAuthServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>9443</param-value>
    </init-param>
    <init-param>
      <param-name>errorpage.forbidden</param-name>
      <param-value>/error/403.jsp</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>SpnegoAuthServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.SpnegoAuthServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>PublicICalServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.PublicICalServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
    <load-on-startup>5</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>FileUploadServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.FileUploadServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7443, 7071</param-value>
    </init-param>
    <load-on-startup>6</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>StatsImageServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.admin.StatsImageServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>7071</param-value>
    </init-param>
    <load-on-startup>7</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>DavServlet</servlet-name>
    <servlet-class>com.zimbra.cs.dav.service.DavServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>443, 7070, 7071, 7443</param-value>
    </init-param>
    <load-on-startup>9</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>DavWellKnownServlet</servlet-name>
    <servlet-class>com.zimbra.cs.dav.service.DavWellKnownServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>443, 7070, 7071, 7443</param-value>
    </init-param>
    <load-on-startup>9</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>CollectLDAPConfigZimbra</servlet-name>
    <servlet-class>com.zimbra.cs.service.admin.CollectLDAPConfigZimbra</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>7071</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>CollectConfigFiles</servlet-name>
    <servlet-class>com.zimbra.cs.service.admin.CollectConfigFiles</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>7071</param-value>
    </init-param>
  </servlet>

  <servlet>
    <servlet-name>RobotsServlet</servlet-name>
    <servlet-class>com.zimbra.cs.servlet.RobotsServlet</servlet-class>
    <load-on-startup>11</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>

  <servlet>
    <servlet-name>AutoDiscoverServlet</servlet-name>
    <servlet-class>com.zimbra.cs.service.AutoDiscoverServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>allowed.ports</param-name>
      <param-value>80, 443, 7070, 7071, 7443</param-value>
    </init-param>
    <load-on-startup>12</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>ExtensionDispatcherServlet</servlet-name>
    <url-pattern>/extension/*</url-pattern>
  </servlet-mapping>


  <servlet-mapping>
    <servlet-name>WsdlServlet</servlet-name>
    <url-pattern>/wsdl/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>ContentServlet</servlet-name>
    <url-pattern>/content/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>PublicICalServlet</servlet-name>
    <url-pattern>/pubcal/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>UserServlet</servlet-name>
    <url-pattern>/user/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>UserServlet</servlet-name>
    <url-pattern>/home/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>PreAuthServlet</servlet-name>
    <url-pattern>/preauth/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>PreAuthServlet</servlet-name>
    <url-pattern>/preauth</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>ExternalUserProvServlet</servlet-name>
    <url-pattern>/extuserprov/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>CertAuthServlet</servlet-name>
    <url-pattern>/certauth/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>CertAuthServlet</servlet-name>
    <url-pattern>/certauth</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SpnegoAuthServlet</servlet-name>
    <url-pattern>/spnego/</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SpnegoAuthServlet</servlet-name>
    <url-pattern>/spnego</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>FileUploadServlet</servlet-name>
    <url-pattern>/upload</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>StatsImageServlet</servlet-name>
    <url-pattern>/statsimg/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>CollectConfigFiles</servlet-name>
    <url-pattern>/collectconfig/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>CollectLDAPConfigZimbra</servlet-name>
    <url-pattern>/collectldapconfig/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>DavServlet</servlet-name>
    <url-pattern>/dav/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>DavWellKnownServlet</servlet-name>
    <url-pattern>/.well-known/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>RobotsServlet</servlet-name>
    <url-pattern>/robots.txt</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AutoDiscoverServlet</servlet-name>
    <url-pattern>/autodiscover/*</url-pattern>
    <url-pattern>/Autodiscover/*</url-pattern>
    <url-pattern>/AutoDiscover/*</url-pattern>
  </servlet-mapping>

  <servlet id="jsp">
    <servlet-name>jsp</servlet-name>
    <servlet-class>org.eclipse.jetty.jsp.JettyJspServlet</servlet-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>fork</param-name>
      <param-value>false</param-value>
    </init-param>
    <init-param>
      <param-name>xpoweredBy</param-name>
      <param-value>false</param-value>
    </init-param>
    <init-param>
      <param-name>trimSpaces</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>classpath</param-name>
      <param-value>?</param-value>
    </init-param>
    <load-on-startup>0</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>jsp</servlet-name>
    <url-pattern>/spnego/snoop.jsp</url-pattern>
    <url-pattern>/spnego/error401.jsp</url-pattern>
    <url-pattern>/error/403.jsp</url-pattern>
    <url-pattern>/error/attachment_blocked.jsp</url-pattern>
    <url-pattern>/error/sfdc_preauth.jsp</url-pattern>
  </servlet-mapping>
  <env-entry>
    <description>
        Carbonio Services Installed on the server.
    </description>
    <env-entry-name>zimbraServicesEnabled</env-entry-name>
    <env-entry-type>java.lang.String</env-entry-type>
    <env-entry-value>service,mailbox</env-entry-value>
  </env-entry>
  <!--  additional servlets -->
</web-app>
