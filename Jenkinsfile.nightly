pipeline {
    agent {
        node {
            label 'carbonio-agent-v1'
        }
    }
    triggers {
        cron('H 5 * * *')
    }
    environment {
        JAVA_OPTS="-Dfile.encoding=UTF8"
        LC_ALL="C.UTF-8"
        jenkins_build="true"
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '25'))
        timeout(time: 2, unit: 'HOURS')
        skipDefaultCheckout()
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                sh """
                    cat <<EOF > build.properties
                    debug=0
                    is-production=1
                    carbonio.buildinfo.version=22.7.2_ZEXTRAS_202207
                    EOF
                   """
                 withCredentials([file(credentialsId: 'artifactory-jenkins-gradle-properties', variable: 'CREDENTIALS')]) {
                   sh "cat ${CREDENTIALS} | sed -E 's#\\\\#\\\\\\\\#g' >> build.properties"
                 }
				        sh 'sudo apt-get update && sudo apt-get install -yqq openjdk-11-jdk-headless'
                sh """
                    ANT_RESPECT_JAVA_HOME=true JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/ ant \
                         -propertyfile build.properties \
                         dist
                    """
                sh 'mkdir staging'
                sh 'cp -r store* milter* native client common packages soap staging'
                stash includes: 'staging/**', name: 'staging'
            }
        }
        stage("Test all with coverage (allow failure)") {
          steps {
            sh """
                   ANT_RESPECT_JAVA_HOME=true JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/ ant -d \
                   -propertyfile build.properties \
                   test-all-coverage-plough-through
               """
            publishCoverage adapters: [jacocoAdapter('build/coverage/merged.xml')], calculateDiffForChangeRequests: true, failNoReports: true
            junit allowEmptyResults: true, testResults: '**/build/test/output/*.xml'
          }
        }
    }
    post {
            always {
                script {
                withCredentials([string(credentialsId: 'mailing-list-notification', variable: 'EMAIL_ADDRESSES')]) {
                    today = sh(
                            script: 'date +%D',
                            returnStdout: true
                    ).trim()
                    emailext attachLog: true,
                            to: EMAIL_ADDRESSES,
                            recipientProviders: [requestor()],
                            subject: "[Carbonio-Mailbox] Jenkins nightly report for ${today}",
                            body: """
<p>
Hello,</br>
this is your daily report for nightly tests.</br>
You can find your report at <a href="${BUILD_URL}">the following link</a>.</br>
The current build status is ${currentBuild.currentResult}.</br>
The build took ${currentBuild.durationString}.</br>
</p>
<p>
It is strongly suggested to save possible build/test failures because the build log could be pruned in the future.
</p>

Have a nice day,</br>
</br>
--</br>
Jenkins
"""
                }
            }
        }
    }
}
