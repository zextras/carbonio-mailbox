<?xml version="1.0" encoding="UTF-8"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:admin="urn:zimbraAdmin" xmlns:ns1="urn:zimbra" xmlns:ns2="urn:zimbraAccount" xmlns:ns3="urn:zimbraMail" xmlns:tns="urn:zimbraAdmin" elementFormDefault="qualified" targetNamespace="urn:zimbraAdmin" version="1.0">
    
  <xs:import namespace="urn:zimbra" schemaLocation="zimbra.xsd"/>
    
  <xs:import namespace="urn:zimbraAccount" schemaLocation="zimbraAccount.xsd"/>
    
  <xs:import namespace="urn:zimbraMail" schemaLocation="zimbraMail.xsd"/>
    
  <xs:element name="AbortHsmRequest" type="tns:abortHsmRequest"/>
    
  <xs:element name="AbortHsmResponse" type="tns:abortHsmResponse"/>
    
  <xs:element name="AbortXMbxSearchRequest" type="tns:abortXMbxSearchRequest"/>
    
  <xs:element name="AbortXMbxSearchResponse" type="tns:abortXMbxSearchResponse"/>
    
  <xs:element name="AddAccountAliasRequest" type="tns:addAccountAliasRequest"/>
    
  <xs:element name="AddAccountAliasResponse" type="tns:addAccountAliasResponse"/>
    
  <xs:element name="AddAccountLoggerRequest" type="tns:addAccountLoggerRequest"/>
    
  <xs:element name="AddAccountLoggerResponse" type="tns:addAccountLoggerResponse"/>
    
  <xs:element name="AddDistributionListAliasRequest" type="tns:addDistributionListAliasRequest"/>
    
  <xs:element name="AddDistributionListAliasResponse" type="tns:addDistributionListAliasResponse"/>
    
  <xs:element name="AddDistributionListMemberRequest" type="tns:addDistributionListMemberRequest"/>
    
  <xs:element name="AddDistributionListMemberResponse" type="tns:addDistributionListMemberResponse"/>
    
  <xs:element name="AddGalSyncDataSourceRequest" type="tns:addGalSyncDataSourceRequest"/>
    
  <xs:element name="AddGalSyncDataSourceResponse" type="tns:addGalSyncDataSourceResponse"/>
    
  <xs:element name="AdminCreateWaitSetRequest" type="tns:adminCreateWaitSetRequest"/>
    
  <xs:element name="AdminCreateWaitSetResponse" type="tns:adminCreateWaitSetResponse"/>
    
  <xs:element name="AdminDestroyWaitSetRequest" type="tns:adminDestroyWaitSetRequest"/>
    
  <xs:element name="AdminDestroyWaitSetResponse" type="tns:adminDestroyWaitSetResponse"/>
    
  <xs:element name="AdminWaitSetRequest" type="tns:adminWaitSetRequest"/>
    
  <xs:element name="AdminWaitSetResponse" type="tns:adminWaitSetResponse"/>
    
  <xs:element name="AuthRequest" type="tns:authRequest"/>
    
  <xs:element name="AuthResponse" type="tns:authResponse"/>
    
  <xs:element name="AutoCompleteGalRequest" type="tns:autoCompleteGalRequest"/>
    
  <xs:element name="AutoCompleteGalResponse" type="tns:autoCompleteGalResponse"/>
    
  <xs:element name="AutoProvAccountRequest" type="tns:autoProvAccountRequest"/>
    
  <xs:element name="AutoProvAccountResponse" type="tns:autoProvAccountResponse"/>
    
  <xs:element name="AutoProvTaskControlRequest" type="tns:autoProvTaskControlRequest"/>
    
  <xs:element name="AutoProvTaskControlResponse" type="tns:autoProvTaskControlResponse"/>
    
  <xs:element name="BackupAccountQueryRequest" type="tns:backupAccountQueryRequest"/>
    
  <xs:element name="BackupAccountQueryResponse" type="tns:backupAccountQueryResponse"/>
    
  <xs:element name="BackupQueryRequest" type="tns:backupQueryRequest"/>
    
  <xs:element name="BackupQueryResponse" type="tns:backupQueryResponse"/>
    
  <xs:element name="BackupRequest" type="tns:backupRequest"/>
    
  <xs:element name="BackupResponse" type="tns:backupResponse"/>
    
  <xs:element name="ChangePrimaryEmailRequest" type="tns:changePrimaryEmailRequest"/>
    
  <xs:element name="ChangePrimaryEmailResponse" type="tns:changePrimaryEmailResponse"/>
    
  <xs:element name="CheckAuthConfigRequest" type="tns:checkAuthConfigRequest"/>
    
  <xs:element name="CheckAuthConfigResponse" type="tns:checkAuthConfigResponse"/>
    
  <xs:element name="CheckBlobConsistencyRequest" type="tns:checkBlobConsistencyRequest"/>
    
  <xs:element name="CheckBlobConsistencyResponse" type="tns:checkBlobConsistencyResponse"/>
    
  <xs:element name="CheckDirectoryRequest" type="tns:checkDirectoryRequest"/>
    
  <xs:element name="CheckDirectoryResponse" type="tns:checkDirectoryResponse"/>
    
  <xs:element name="CheckExchangeAuthRequest" type="tns:checkExchangeAuthRequest"/>
    
  <xs:element name="CheckExchangeAuthResponse" type="tns:checkExchangeAuthResponse"/>
    
  <xs:element name="CheckGalConfigRequest" type="tns:checkGalConfigRequest"/>
    
  <xs:element name="CheckGalConfigResponse" type="tns:checkGalConfigResponse"/>
    
  <xs:element name="CheckHealthRequest" type="tns:checkHealthRequest"/>
    
  <xs:element name="CheckHealthResponse" type="tns:checkHealthResponse"/>
    
  <xs:element name="CheckHostnameResolveRequest" type="tns:checkHostnameResolveRequest"/>
    
  <xs:element name="CheckHostnameResolveResponse" type="tns:checkHostnameResolveResponse"/>
    
  <xs:element name="CheckPasswordStrengthRequest" type="tns:checkPasswordStrengthRequest"/>
    
  <xs:element name="CheckPasswordStrengthResponse" type="tns:checkPasswordStrengthResponse"/>
    
  <xs:element name="CheckRightRequest" type="tns:checkRightRequest"/>
    
  <xs:element name="CheckRightResponse" type="tns:checkRightResponse"/>
    
  <xs:element name="ClearCookieRequest" type="tns:clearCookieRequest"/>
    
  <xs:element name="ClearCookieResponse" type="tns:clearCookieResponse"/>
    
  <xs:element name="CompactIndexRequest" type="tns:compactIndexRequest"/>
    
  <xs:element name="CompactIndexResponse" type="tns:compactIndexResponse"/>
    
  <xs:element name="ComputeAggregateQuotaUsageRequest" type="tns:computeAggregateQuotaUsageRequest"/>
    
  <xs:element name="ComputeAggregateQuotaUsageResponse" type="tns:computeAggregateQuotaUsageResponse"/>
    
  <xs:element name="ConfigureZimletRequest" type="tns:configureZimletRequest"/>
    
  <xs:element name="ConfigureZimletResponse" type="tns:configureZimletResponse"/>
    
  <xs:element name="ContactBackupRequest" type="tns:contactBackupRequest"/>
    
  <xs:element name="ContactBackupResponse" type="tns:contactBackupResponse"/>
    
  <xs:element name="CopyCosRequest" type="tns:copyCosRequest"/>
    
  <xs:element name="CopyCosResponse" type="tns:copyCosResponse"/>
    
  <xs:element name="CountAccountRequest" type="tns:countAccountRequest"/>
    
  <xs:element name="CountAccountResponse" type="tns:countAccountResponse"/>
    
  <xs:element name="CountObjectsRequest" type="tns:countObjectsRequest"/>
    
  <xs:element name="CountObjectsResponse" type="tns:countObjectsResponse"/>
    
  <xs:element name="CreateAccountRequest" type="tns:createAccountRequest"/>
    
  <xs:element name="CreateAccountResponse" type="tns:createAccountResponse"/>
    
  <xs:element name="CreateAddressListRequest" type="tns:createAddressListRequest"/>
    
  <xs:element name="CreateAddressListResponse" type="tns:createAddressListResponse"/>
    
  <xs:element name="CreateArchiveRequest" type="tns:createArchiveRequest"/>
    
  <xs:element name="CreateArchiveResponse" type="tns:createArchiveResponse"/>
    
  <xs:element name="CreateCalendarResourceRequest" type="tns:createCalendarResourceRequest"/>
    
  <xs:element name="CreateCalendarResourceResponse" type="tns:createCalendarResourceResponse"/>
    
  <xs:element name="CreateCosRequest" type="tns:createCosRequest"/>
    
  <xs:element name="CreateCosResponse" type="tns:createCosResponse"/>
    
  <xs:element name="CreateDataSourceRequest" type="tns:createDataSourceRequest"/>
    
  <xs:element name="CreateDataSourceResponse" type="tns:createDataSourceResponse"/>
    
  <xs:element name="CreateDistributionListRequest" type="tns:createDistributionListRequest"/>
    
  <xs:element name="CreateDistributionListResponse" type="tns:createDistributionListResponse"/>
    
  <xs:element name="CreateDomainRequest" type="tns:createDomainRequest"/>
    
  <xs:element name="CreateDomainResponse" type="tns:createDomainResponse"/>
    
  <xs:element name="CreateGalSyncAccountRequest" type="tns:createGalSyncAccountRequest"/>
    
  <xs:element name="CreateGalSyncAccountResponse" type="tns:createGalSyncAccountResponse"/>
    
  <xs:element name="CreateHABGroupRequest" type="tns:createHABGroupRequest"/>
    
  <xs:element name="CreateHABGroupResponse" type="tns:createHABGroupResponse"/>
    
  <xs:element name="CreateServerRequest" type="tns:createServerRequest"/>
    
  <xs:element name="CreateServerResponse" type="tns:createServerResponse"/>
    
  <xs:element name="CreateSystemRetentionPolicyRequest" type="tns:createSystemRetentionPolicyRequest"/>
    
  <xs:element name="CreateSystemRetentionPolicyResponse" type="tns:createSystemRetentionPolicyResponse"/>
    
  <xs:element name="CreateVolumeRequest" type="tns:createVolumeRequest"/>
    
  <xs:element name="CreateVolumeResponse" type="tns:createVolumeResponse"/>
    
  <xs:element name="CreateXMPPComponentRequest" type="tns:createXMPPComponentRequest"/>
    
  <xs:element name="CreateXMPPComponentResponse" type="tns:createXMPPComponentResponse"/>
    
  <xs:element name="CreateXMbxSearchRequest" type="tns:createXMbxSearchRequest"/>
    
  <xs:element name="CreateXMbxSearchResponse" type="tns:createXMbxSearchResponse"/>
    
  <xs:element name="CreateZimletRequest" type="tns:createZimletRequest"/>
    
  <xs:element name="CreateZimletResponse" type="tns:createZimletResponse"/>
    
  <xs:element name="DedupeBlobsRequest" type="tns:dedupeBlobsRequest"/>
    
  <xs:element name="DedupeBlobsResponse" type="tns:dedupeBlobsResponse"/>
    
  <xs:element name="DelegateAuthRequest" type="tns:delegateAuthRequest"/>
    
  <xs:element name="DelegateAuthResponse" type="tns:delegateAuthResponse"/>
    
  <xs:element name="DeleteAccountRequest" type="tns:deleteAccountRequest"/>
    
  <xs:element name="DeleteAccountResponse" type="tns:deleteAccountResponse"/>
    
  <xs:element name="DeleteAddressListRequest" type="tns:deleteAddressListRequest"/>
    
  <xs:element name="DeleteAddressListResponse" type="tns:deleteAddressListResponse"/>
    
  <xs:element name="DeleteCalendarResourceRequest" type="tns:deleteCalendarResourceRequest"/>
    
  <xs:element name="DeleteCalendarResourceResponse" type="tns:deleteCalendarResourceResponse"/>
    
  <xs:element name="DeleteCosRequest" type="tns:deleteCosRequest"/>
    
  <xs:element name="DeleteCosResponse" type="tns:deleteCosResponse"/>
    
  <xs:element name="DeleteDataSourceRequest" type="tns:deleteDataSourceRequest"/>
    
  <xs:element name="DeleteDataSourceResponse" type="tns:deleteDataSourceResponse"/>
    
  <xs:element name="DeleteDistributionListRequest" type="tns:deleteDistributionListRequest"/>
    
  <xs:element name="DeleteDistributionListResponse" type="tns:deleteDistributionListResponse"/>
    
  <xs:element name="DeleteDomainRequest" type="tns:deleteDomainRequest"/>
    
  <xs:element name="DeleteDomainResponse" type="tns:deleteDomainResponse"/>
    
  <xs:element name="DeleteGalSyncAccountRequest" type="tns:deleteGalSyncAccountRequest"/>
    
  <xs:element name="DeleteGalSyncAccountResponse" type="tns:deleteGalSyncAccountResponse"/>
    
  <xs:element name="DeleteMailboxRequest" type="tns:deleteMailboxRequest"/>
    
  <xs:element name="DeleteMailboxResponse" type="tns:deleteMailboxResponse"/>
    
  <xs:element name="DeleteServerRequest" type="tns:deleteServerRequest"/>
    
  <xs:element name="DeleteServerResponse" type="tns:deleteServerResponse"/>
    
  <xs:element name="DeleteSystemRetentionPolicyRequest" type="tns:deleteSystemRetentionPolicyRequest"/>
    
  <xs:element name="DeleteSystemRetentionPolicyResponse" type="tns:deleteSystemRetentionPolicyResponse"/>
    
  <xs:element name="DeleteVolumeRequest" type="tns:deleteVolumeRequest"/>
    
  <xs:element name="DeleteVolumeResponse" type="tns:deleteVolumeResponse"/>
    
  <xs:element name="DeleteXMPPComponentRequest" type="tns:deleteXMPPComponentRequest"/>
    
  <xs:element name="DeleteXMPPComponentResponse" type="tns:deleteXMPPComponentResponse"/>
    
  <xs:element name="DeleteXMbxSearchRequest" type="tns:deleteXMbxSearchRequest"/>
    
  <xs:element name="DeleteXMbxSearchResponse" type="tns:deleteXMbxSearchResponse"/>
    
  <xs:element name="DeleteZimletRequest" type="tns:deleteZimletRequest"/>
    
  <xs:element name="DeleteZimletResponse" type="tns:deleteZimletResponse"/>
    
  <xs:element name="DeployZimletRequest" type="tns:deployZimletRequest"/>
    
  <xs:element name="DeployZimletResponse" type="tns:deployZimletResponse"/>
    
  <xs:element name="DisableArchiveRequest" type="tns:disableArchiveRequest"/>
    
  <xs:element name="DisableArchiveResponse" type="tns:disableArchiveResponse"/>
    
  <xs:element name="DumpSessionsRequest" type="tns:dumpSessionsRequest"/>
    
  <xs:element name="DumpSessionsResponse" type="tns:dumpSessionsResponse"/>
    
  <xs:element name="EnableArchiveRequest" type="tns:enableArchiveRequest"/>
    
  <xs:element name="EnableArchiveResponse" type="tns:enableArchiveResponse"/>
    
  <xs:element name="ExportAndDeleteItemsRequest" type="tns:exportAndDeleteItemsRequest"/>
    
  <xs:element name="ExportAndDeleteItemsResponse" type="tns:exportAndDeleteItemsResponse"/>
    
  <xs:element name="ExportMailboxRequest" type="tns:exportMailboxRequest"/>
    
  <xs:element name="ExportMailboxResponse" type="tns:exportMailboxResponse"/>
    
  <xs:element name="FailoverClusterServiceRequest" type="tns:failoverClusterServiceRequest"/>
    
  <xs:element name="FailoverClusterServiceResponse" type="tns:failoverClusterServiceResponse"/>
    
  <xs:element name="FixCalendarEndTimeRequest" type="tns:fixCalendarEndTimeRequest"/>
    
  <xs:element name="FixCalendarEndTimeResponse" type="tns:fixCalendarEndTimeResponse"/>
    
  <xs:element name="FixCalendarPriorityRequest" type="tns:fixCalendarPriorityRequest"/>
    
  <xs:element name="FixCalendarPriorityResponse" type="tns:fixCalendarPriorityResponse"/>
    
  <xs:element name="FixCalendarTZRequest" type="tns:fixCalendarTZRequest"/>
    
  <xs:element name="FixCalendarTZResponse" type="tns:fixCalendarTZResponse"/>
    
  <xs:element name="FlushCacheRequest" type="tns:flushCacheRequest"/>
    
  <xs:element name="FlushCacheResponse" type="tns:flushCacheResponse"/>
    
  <xs:element name="GenCSRRequest" type="tns:genCSRRequest"/>
    
  <xs:element name="GenCSRResponse" type="tns:genCSRResponse"/>
    
  <xs:element name="GetAccountInfoRequest" type="tns:getAccountInfoRequest"/>
    
  <xs:element name="GetAccountInfoResponse" type="tns:getAccountInfoResponse"/>
    
  <xs:element name="GetAccountLoggersRequest" type="tns:getAccountLoggersRequest"/>
    
  <xs:element name="GetAccountLoggersResponse" type="tns:getAccountLoggersResponse"/>
    
  <xs:element name="GetAccountMembershipRequest" type="tns:getAccountMembershipRequest"/>
    
  <xs:element name="GetAccountMembershipResponse" type="tns:getAccountMembershipResponse"/>
    
  <xs:element name="GetAccountRequest" type="tns:getAccountRequest"/>
    
  <xs:element name="GetAccountResponse" type="tns:getAccountResponse"/>
    
  <xs:element name="GetAddressListInfoRequest" type="tns:getAddressListInfoRequest"/>
    
  <xs:element name="GetAddressListInfoResponse" type="tns:getAddressListInfoResponse"/>
    
  <xs:element name="GetAdminConsoleUICompRequest" type="tns:getAdminConsoleUICompRequest"/>
    
  <xs:element name="GetAdminConsoleUICompResponse" type="tns:getAdminConsoleUICompResponse"/>
    
  <xs:element name="GetAdminExtensionZimletsRequest" type="tns:getAdminExtensionZimletsRequest"/>
    
  <xs:element name="GetAdminExtensionZimletsResponse" type="tns:getAdminExtensionZimletsResponse"/>
    
  <xs:element name="GetAdminSavedSearchesRequest" type="tns:getAdminSavedSearchesRequest"/>
    
  <xs:element name="GetAdminSavedSearchesResponse" type="tns:getAdminSavedSearchesResponse"/>
    
  <xs:element name="GetAggregateQuotaUsageOnServerRequest" type="tns:getAggregateQuotaUsageOnServerRequest"/>
    
  <xs:element name="GetAggregateQuotaUsageOnServerResponse" type="tns:getAggregateQuotaUsageOnServerResponse"/>
    
  <xs:element name="GetAllAccountLoggersRequest" type="tns:getAllAccountLoggersRequest"/>
    
  <xs:element name="GetAllAccountLoggersResponse" type="tns:getAllAccountLoggersResponse"/>
    
  <xs:element name="GetAllAccountsRequest" type="tns:getAllAccountsRequest"/>
    
  <xs:element name="GetAllAccountsResponse" type="tns:getAllAccountsResponse"/>
    
  <xs:element name="GetAllAddressListsRequest" type="tns:getAllAddressListsRequest"/>
    
  <xs:element name="GetAllAddressListsResponse" type="tns:getAllAddressListsResponse"/>
    
  <xs:element name="GetAllAdminAccountsRequest" type="tns:getAllAdminAccountsRequest"/>
    
  <xs:element name="GetAllAdminAccountsResponse" type="tns:getAllAdminAccountsResponse"/>
    
  <xs:element name="GetAllCalendarResourcesRequest" type="tns:getAllCalendarResourcesRequest"/>
    
  <xs:element name="GetAllCalendarResourcesResponse" type="tns:getAllCalendarResourcesResponse"/>
    
  <xs:element name="GetAllConfigRequest" type="tns:getAllConfigRequest"/>
    
  <xs:element name="GetAllConfigResponse" type="tns:getAllConfigResponse"/>
    
  <xs:element name="GetAllCosRequest" type="tns:getAllCosRequest"/>
    
  <xs:element name="GetAllCosResponse" type="tns:getAllCosResponse"/>
    
  <xs:element name="GetAllDistributionListsRequest" type="tns:getAllDistributionListsRequest"/>
    
  <xs:element name="GetAllDistributionListsResponse" type="tns:getAllDistributionListsResponse"/>
    
  <xs:element name="GetAllDomainsRequest" type="tns:getAllDomainsRequest"/>
    
  <xs:element name="GetAllDomainsResponse" type="tns:getAllDomainsResponse"/>
    
  <xs:element name="GetAllEffectiveRightsRequest" type="tns:getAllEffectiveRightsRequest"/>
    
  <xs:element name="GetAllEffectiveRightsResponse" type="tns:getAllEffectiveRightsResponse"/>
    
  <xs:element name="GetAllFreeBusyProvidersRequest" type="tns:getAllFreeBusyProvidersRequest"/>
    
  <xs:element name="GetAllFreeBusyProvidersResponse" type="tns:getAllFreeBusyProvidersResponse"/>
    
  <xs:element name="GetAllLocalesRequest" type="tns:getAllLocalesRequest"/>
    
  <xs:element name="GetAllLocalesResponse" type="tns:getAllLocalesResponse"/>
    
  <xs:element name="GetAllMailboxesRequest" type="tns:getAllMailboxesRequest"/>
    
  <xs:element name="GetAllMailboxesResponse" type="tns:getAllMailboxesResponse"/>
    
  <xs:element name="GetAllRightsRequest" type="tns:getAllRightsRequest"/>
    
  <xs:element name="GetAllRightsResponse" type="tns:getAllRightsResponse"/>
    
  <xs:element name="GetAllServersRequest" type="tns:getAllServersRequest"/>
    
  <xs:element name="GetAllServersResponse" type="tns:getAllServersResponse"/>
    
  <xs:element name="GetAllVolumesRequest" type="tns:getAllVolumesRequest"/>
    
  <xs:element name="GetAllVolumesResponse" type="tns:getAllVolumesResponse"/>
    
  <xs:element name="GetAllXMPPComponentsRequest" type="tns:getAllXMPPComponentsRequest"/>
    
  <xs:element name="GetAllXMPPComponentsResponse" type="tns:getAllXMPPComponentsResponse"/>
    
  <xs:element name="GetAllZimletsRequest" type="tns:getAllZimletsRequest"/>
    
  <xs:element name="GetAllZimletsResponse" type="tns:getAllZimletsResponse"/>
    
  <xs:element name="GetApplianceHSMFSRequest" type="tns:getApplianceHSMFSRequest"/>
    
  <xs:element name="GetApplianceHSMFSResponse" type="tns:getApplianceHSMFSResponse"/>
    
  <xs:element name="GetAttributeInfoRequest" type="tns:getAttributeInfoRequest"/>
    
  <xs:element name="GetAttributeInfoResponse" type="tns:getAttributeInfoResponse"/>
    
  <xs:element name="GetCSRRequest" type="tns:getCSRRequest"/>
    
  <xs:element name="GetCSRResponse" type="tns:getCSRResponse"/>
    
  <xs:element name="GetCalendarResourceRequest" type="tns:getCalendarResourceRequest"/>
    
  <xs:element name="GetCalendarResourceResponse" type="tns:getCalendarResourceResponse"/>
    
  <xs:element name="GetCertRequest" type="tns:getCertRequest"/>
    
  <xs:element name="GetCertResponse" type="tns:getCertResponse"/>
    
  <xs:element name="GetClusterStatusRequest" type="tns:getClusterStatusRequest"/>
    
  <xs:element name="GetClusterStatusResponse" type="tns:getClusterStatusResponse"/>
    
  <xs:element name="GetConfigRequest" type="tns:getConfigRequest"/>
    
  <xs:element name="GetConfigResponse" type="tns:getConfigResponse"/>
    
  <xs:element name="GetCosRequest" type="tns:getCosRequest"/>
    
  <xs:element name="GetCosResponse" type="tns:getCosResponse"/>
    
  <xs:element name="GetCreateObjectAttrsRequest" type="tns:getCreateObjectAttrsRequest"/>
    
  <xs:element name="GetCreateObjectAttrsResponse" type="tns:getCreateObjectAttrsResponse"/>
    
  <xs:element name="GetCurrentVolumesRequest" type="tns:getCurrentVolumesRequest"/>
    
  <xs:element name="GetCurrentVolumesResponse" type="tns:getCurrentVolumesResponse"/>
    
  <xs:element name="GetDataSourcesRequest" type="tns:getDataSourcesRequest"/>
    
  <xs:element name="GetDataSourcesResponse" type="tns:getDataSourcesResponse"/>
    
  <xs:element name="GetDelegatedAdminConstraintsRequest" type="tns:getDelegatedAdminConstraintsRequest"/>
    
  <xs:element name="GetDelegatedAdminConstraintsResponse" type="tns:getDelegatedAdminConstraintsResponse"/>
    
  <xs:element name="GetDistributionListMembershipRequest" type="tns:getDistributionListMembershipRequest"/>
    
  <xs:element name="GetDistributionListMembershipResponse" type="tns:getDistributionListMembershipResponse"/>
    
  <xs:element name="GetDistributionListRequest" type="tns:getDistributionListRequest"/>
    
  <xs:element name="GetDistributionListResponse" type="tns:getDistributionListResponse"/>
    
  <xs:element name="GetDomainCertRequest" type="tns:getDomainCertRequest"/>
    
  <xs:element name="GetDomainCertResponse" type="tns:getDomainCertResponse"/>
    
  <xs:element name="GetDomainInfoRequest" type="tns:getDomainInfoRequest"/>
    
  <xs:element name="GetDomainInfoResponse" type="tns:getDomainInfoResponse"/>
    
  <xs:element name="GetDomainRequest" type="tns:getDomainRequest"/>
    
  <xs:element name="GetDomainResponse" type="tns:getDomainResponse"/>
    
  <xs:element name="GetEffectiveRightsRequest" type="tns:getEffectiveRightsRequest"/>
    
  <xs:element name="GetEffectiveRightsResponse" type="tns:getEffectiveRightsResponse"/>
    
  <xs:element name="GetFilterRulesRequest" type="tns:getFilterRulesRequest"/>
    
  <xs:element name="GetFilterRulesResponse" type="tns:getFilterRulesResponse"/>
    
  <xs:element name="GetFreeBusyQueueInfoRequest" type="tns:getFreeBusyQueueInfoRequest"/>
    
  <xs:element name="GetFreeBusyQueueInfoResponse" type="tns:getFreeBusyQueueInfoResponse"/>
    
  <xs:element name="GetGrantsRequest" type="tns:getGrantsRequest"/>
    
  <xs:element name="GetGrantsResponse" type="tns:getGrantsResponse"/>
    
  <xs:element name="GetHsmStatusRequest" type="tns:getHsmStatusRequest"/>
    
  <xs:element name="GetHsmStatusResponse" type="tns:getHsmStatusResponse"/>
    
  <xs:element name="GetIndexStatsRequest" type="tns:getIndexStatsRequest"/>
    
  <xs:element name="GetIndexStatsResponse" type="tns:getIndexStatsResponse"/>
    
  <xs:element name="GetLoggerStatsRequest" type="tns:getLoggerStatsRequest"/>
    
  <xs:element name="GetLoggerStatsResponse" type="tns:getLoggerStatsResponse"/>
    
  <xs:element name="GetMailQueueInfoRequest" type="tns:getMailQueueInfoRequest"/>
    
  <xs:element name="GetMailQueueInfoResponse" type="tns:getMailQueueInfoResponse"/>
    
  <xs:element name="GetMailQueueRequest" type="tns:getMailQueueRequest"/>
    
  <xs:element name="GetMailQueueResponse" type="tns:getMailQueueResponse"/>
    
  <xs:element name="GetMailboxRequest" type="tns:getMailboxRequest"/>
    
  <xs:element name="GetMailboxResponse" type="tns:getMailboxResponse"/>
    
  <xs:element name="GetMailboxStatsRequest" type="tns:getMailboxStatsRequest"/>
    
  <xs:element name="GetMailboxStatsResponse" type="tns:getMailboxStatsResponse"/>
    
  <xs:element name="GetMailboxVersionRequest" type="tns:getMailboxVersionRequest"/>
    
  <xs:element name="GetMailboxVersionResponse" type="tns:getMailboxVersionResponse"/>
    
  <xs:element name="GetMailboxVolumesRequest" type="tns:getMailboxVolumesRequest"/>
    
  <xs:element name="GetMailboxVolumesResponse" type="tns:getMailboxVolumesResponse"/>
    
  <xs:element name="GetMemcachedClientConfigRequest" type="tns:getMemcachedClientConfigRequest"/>
    
  <xs:element name="GetMemcachedClientConfigResponse" type="tns:getMemcachedClientConfigResponse"/>
    
  <xs:element name="GetOutgoingFilterRulesRequest" type="tns:getOutgoingFilterRulesRequest"/>
    
  <xs:element name="GetOutgoingFilterRulesResponse" type="tns:getOutgoingFilterRulesResponse"/>
    
  <xs:element name="GetQuotaUsageRequest" type="tns:getQuotaUsageRequest"/>
    
  <xs:element name="GetQuotaUsageResponse" type="tns:getQuotaUsageResponse"/>
    
  <xs:element name="GetRightRequest" type="tns:getRightRequest"/>
    
  <xs:element name="GetRightResponse" type="tns:getRightResponse"/>
    
  <xs:element name="GetRightsDocRequest" type="tns:getRightsDocRequest"/>
    
  <xs:element name="GetRightsDocResponse" type="tns:getRightsDocResponse"/>
    
  <xs:element name="GetSMIMEConfigRequest" type="tns:getSMIMEConfigRequest"/>
    
  <xs:element name="GetSMIMEConfigResponse" type="tns:getSMIMEConfigResponse"/>
    
  <xs:element name="GetServerNIfsRequest" type="tns:getServerNIfsRequest"/>
    
  <xs:element name="GetServerNIfsResponse" type="tns:getServerNIfsResponse"/>
    
  <xs:element name="GetServerRequest" type="tns:getServerRequest"/>
    
  <xs:element name="GetServerResponse" type="tns:getServerResponse"/>
    
  <xs:element name="GetServerStatsRequest" type="tns:getServerStatsRequest"/>
    
  <xs:element name="GetServerStatsResponse" type="tns:getServerStatsResponse"/>
    
  <xs:element name="GetServiceStatusRequest" type="tns:getServiceStatusRequest"/>
    
  <xs:element name="GetServiceStatusResponse" type="tns:getServiceStatusResponse"/>
    
  <xs:element name="GetSessionsRequest" type="tns:getSessionsRequest"/>
    
  <xs:element name="GetSessionsResponse" type="tns:getSessionsResponse"/>
    
  <xs:element name="GetShareInfoRequest" type="tns:getShareInfoRequest"/>
    
  <xs:element name="GetShareInfoResponse" type="tns:getShareInfoResponse"/>
    
  <xs:element name="GetSystemRetentionPolicyRequest" type="tns:getSystemRetentionPolicyRequest"/>
    
  <xs:element name="GetSystemRetentionPolicyResponse" type="tns:getSystemRetentionPolicyResponse"/>
    
  <xs:element name="GetVersionInfoRequest" type="tns:getVersionInfoRequest"/>
    
  <xs:element name="GetVersionInfoResponse" type="tns:getVersionInfoResponse"/>
    
  <xs:element name="GetVolumeRequest" type="tns:getVolumeRequest"/>
    
  <xs:element name="GetVolumeResponse" type="tns:getVolumeResponse"/>
    
  <xs:element name="GetXMPPComponentRequest" type="tns:getXMPPComponentRequest"/>
    
  <xs:element name="GetXMPPComponentResponse" type="tns:getXMPPComponentResponse"/>
    
  <xs:element name="GetXMbxSearchesListRequest" type="tns:getXMbxSearchesListRequest"/>
    
  <xs:element name="GetXMbxSearchesListResponse" type="tns:getXMbxSearchesListResponse"/>
    
  <xs:element name="GetZimletRequest" type="tns:getZimletRequest"/>
    
  <xs:element name="GetZimletResponse" type="tns:getZimletResponse"/>
    
  <xs:element name="GetZimletStatusRequest" type="tns:getZimletStatusRequest"/>
    
  <xs:element name="GetZimletStatusResponse" type="tns:getZimletStatusResponse"/>
    
  <xs:element name="GrantRightRequest" type="tns:grantRightRequest"/>
    
  <xs:element name="GrantRightResponse" type="tns:grantRightResponse"/>
    
  <xs:element name="HABOrgUnitRequest" type="tns:habOrgUnitRequest"/>
    
  <xs:element name="HABOrgUnitResponse" type="tns:habOrgUnitResponse"/>
    
  <xs:element name="HsmRequest" type="tns:hsmRequest"/>
    
  <xs:element name="HsmResponse" type="tns:hsmResponse"/>
    
  <xs:element name="InstallCertRequest" type="tns:installCertRequest"/>
    
  <xs:element name="InstallCertResponse" type="tns:installCertResponse"/>
    
  <xs:element name="IssueCertRequest" type="tns:issueCertRequest"/>
    
  <xs:element name="IssueCertResponse" type="tns:issueCertResponse"/>
    
  <xs:element name="LockoutMailboxRequest" type="tns:lockoutMailboxRequest"/>
    
  <xs:element name="LockoutMailboxResponse" type="tns:lockoutMailboxResponse"/>
    
  <xs:element name="MailQueueActionRequest" type="tns:mailQueueActionRequest"/>
    
  <xs:element name="MailQueueActionResponse" type="tns:mailQueueActionResponse"/>
    
  <xs:element name="MailQueueFlushRequest" type="tns:mailQueueFlushRequest"/>
    
  <xs:element name="MailQueueFlushResponse" type="tns:mailQueueFlushResponse"/>
    
  <xs:element name="MigrateAccountRequest" type="tns:migrateAccountRequest"/>
    
  <xs:element name="MigrateAccountResponse" type="tns:migrateAccountResponse"/>
    
  <xs:element name="ModifyAccountRequest" type="tns:modifyAccountRequest"/>
    
  <xs:element name="ModifyAccountResponse" type="tns:modifyAccountResponse"/>
    
  <xs:element name="ModifyAddressListRequest" type="tns:modifyAddressListRequest"/>
    
  <xs:element name="ModifyAddressListResponse" type="tns:modifyAddressListResponse"/>
    
  <xs:element name="ModifyAdminSavedSearchesRequest" type="tns:modifyAdminSavedSearchesRequest"/>
    
  <xs:element name="ModifyAdminSavedSearchesResponse" type="tns:modifyAdminSavedSearchesResponse"/>
    
  <xs:element name="ModifyCalendarResourceRequest" type="tns:modifyCalendarResourceRequest"/>
    
  <xs:element name="ModifyCalendarResourceResponse" type="tns:modifyCalendarResourceResponse"/>
    
  <xs:element name="ModifyConfigRequest" type="tns:modifyConfigRequest"/>
    
  <xs:element name="ModifyConfigResponse" type="tns:modifyConfigResponse"/>
    
  <xs:element name="ModifyCosRequest" type="tns:modifyCosRequest"/>
    
  <xs:element name="ModifyCosResponse" type="tns:modifyCosResponse"/>
    
  <xs:element name="ModifyDataSourceRequest" type="tns:modifyDataSourceRequest"/>
    
  <xs:element name="ModifyDataSourceResponse" type="tns:modifyDataSourceResponse"/>
    
  <xs:element name="ModifyDelegatedAdminConstraintsRequest" type="tns:modifyDelegatedAdminConstraintsRequest"/>
    
  <xs:element name="ModifyDelegatedAdminConstraintsResponse" type="tns:modifyDelegatedAdminConstraintsResponse"/>
    
  <xs:element name="ModifyDistributionListRequest" type="tns:modifyDistributionListRequest"/>
    
  <xs:element name="ModifyDistributionListResponse" type="tns:modifyDistributionListResponse"/>
    
  <xs:element name="ModifyDomainRequest" type="tns:modifyDomainRequest"/>
    
  <xs:element name="ModifyDomainResponse" type="tns:modifyDomainResponse"/>
    
  <xs:element name="ModifyFilterRulesRequest" type="tns:modifyFilterRulesRequest"/>
    
  <xs:element name="ModifyFilterRulesResponse" type="tns:modifyFilterRulesResponse"/>
    
  <xs:element name="ModifyHABGroupRequest" type="tns:modifyHABGroupRequest"/>
    
  <xs:element name="ModifyHABGroupResponse" type="tns:modifyHABGroupResponse"/>
    
  <xs:element name="ModifyOutgoingFilterRulesRequest" type="tns:modifyOutgoingFilterRulesRequest"/>
    
  <xs:element name="ModifyOutgoingFilterRulesResponse" type="tns:modifyOutgoingFilterRulesResponse"/>
    
  <xs:element name="ModifySMIMEConfigRequest" type="tns:modifySMIMEConfigRequest"/>
    
  <xs:element name="ModifySMIMEConfigResponse" type="tns:modifySMIMEConfigResponse"/>
    
  <xs:element name="ModifyServerRequest" type="tns:modifyServerRequest"/>
    
  <xs:element name="ModifyServerResponse" type="tns:modifyServerResponse"/>
    
  <xs:element name="ModifySystemRetentionPolicyRequest" type="tns:modifySystemRetentionPolicyRequest"/>
    
  <xs:element name="ModifySystemRetentionPolicyResponse" type="tns:modifySystemRetentionPolicyResponse"/>
    
  <xs:element name="ModifyVolumeRequest" type="tns:modifyVolumeRequest"/>
    
  <xs:element name="ModifyVolumeResponse" type="tns:modifyVolumeResponse"/>
    
  <xs:element name="ModifyZimletRequest" type="tns:modifyZimletRequest"/>
    
  <xs:element name="ModifyZimletResponse" type="tns:modifyZimletResponse"/>
    
  <xs:element name="MoveBlobsRequest" type="tns:moveBlobsRequest"/>
    
  <xs:element name="MoveBlobsResponse" type="tns:moveBlobsResponse"/>
    
  <xs:element name="MoveMailboxRequest" type="tns:moveMailboxRequest"/>
    
  <xs:element name="MoveMailboxResponse" type="tns:moveMailboxResponse"/>
    
  <xs:element name="NoOpRequest" type="tns:noOpRequest"/>
    
  <xs:element name="NoOpResponse" type="tns:noOpResponse"/>
    
  <xs:element name="PingRequest" type="tns:pingRequest"/>
    
  <xs:element name="PingResponse" type="tns:pingResponse"/>
    
  <xs:element name="PurgeAccountCalendarCacheRequest" type="tns:purgeAccountCalendarCacheRequest"/>
    
  <xs:element name="PurgeAccountCalendarCacheResponse" type="tns:purgeAccountCalendarCacheResponse"/>
    
  <xs:element name="PurgeFreeBusyQueueRequest" type="tns:purgeFreeBusyQueueRequest"/>
    
  <xs:element name="PurgeFreeBusyQueueResponse" type="tns:purgeFreeBusyQueueResponse"/>
    
  <xs:element name="PurgeMessagesRequest" type="tns:purgeMessagesRequest"/>
    
  <xs:element name="PurgeMessagesResponse" type="tns:purgeMessagesResponse"/>
    
  <xs:element name="PurgeMovedMailboxRequest" type="tns:purgeMovedMailboxRequest"/>
    
  <xs:element name="PurgeMovedMailboxResponse" type="tns:purgeMovedMailboxResponse"/>
    
  <xs:element name="PushFreeBusyRequest" type="tns:pushFreeBusyRequest"/>
    
  <xs:element name="PushFreeBusyResponse" type="tns:pushFreeBusyResponse"/>
    
  <xs:element name="QueryMailboxMoveRequest" type="tns:queryMailboxMoveRequest"/>
    
  <xs:element name="QueryMailboxMoveResponse" type="tns:queryMailboxMoveResponse"/>
    
  <xs:element name="QueryWaitSetRequest" type="tns:queryWaitSetRequest"/>
    
  <xs:element name="QueryWaitSetResponse" type="tns:queryWaitSetResponse"/>
    
  <xs:element name="ReIndexRequest" type="tns:reIndexRequest"/>
    
  <xs:element name="ReIndexResponse" type="tns:reIndexResponse"/>
    
  <xs:element name="RecalculateMailboxCountsRequest" type="tns:recalculateMailboxCountsRequest"/>
    
  <xs:element name="RecalculateMailboxCountsResponse" type="tns:recalculateMailboxCountsResponse"/>
    
  <xs:element name="RefreshRegisteredAuthTokensRequest" type="tns:refreshRegisteredAuthTokensRequest"/>
    
  <xs:element name="RefreshRegisteredAuthTokensResponse" type="tns:refreshRegisteredAuthTokensResponse"/>
    
  <xs:element name="RegisterMailboxMoveOutRequest" type="tns:registerMailboxMoveOutRequest"/>
    
  <xs:element name="RegisterMailboxMoveOutResponse" type="tns:registerMailboxMoveOutResponse"/>
    
  <xs:element name="ReloadAccountRequest" type="tns:reloadAccountRequest"/>
    
  <xs:element name="ReloadAccountResponse" type="tns:reloadAccountResponse"/>
    
  <xs:element name="ReloadLocalConfigRequest" type="tns:reloadLocalConfigRequest"/>
    
  <xs:element name="ReloadLocalConfigResponse" type="tns:reloadLocalConfigResponse"/>
    
  <xs:element name="ReloadMemcachedClientConfigRequest" type="tns:reloadMemcachedClientConfigRequest"/>
    
  <xs:element name="ReloadMemcachedClientConfigResponse" type="tns:reloadMemcachedClientConfigResponse"/>
    
  <xs:element name="RemoveAccountAliasRequest" type="tns:removeAccountAliasRequest"/>
    
  <xs:element name="RemoveAccountAliasResponse" type="tns:removeAccountAliasResponse"/>
    
  <xs:element name="RemoveAccountLoggerRequest" type="tns:removeAccountLoggerRequest"/>
    
  <xs:element name="RemoveAccountLoggerResponse" type="tns:removeAccountLoggerResponse"/>
    
  <xs:element name="RemoveDistributionListAliasRequest" type="tns:removeDistributionListAliasRequest"/>
    
  <xs:element name="RemoveDistributionListAliasResponse" type="tns:removeDistributionListAliasResponse"/>
    
  <xs:element name="RemoveDistributionListMemberRequest" type="tns:removeDistributionListMemberRequest"/>
    
  <xs:element name="RemoveDistributionListMemberResponse" type="tns:removeDistributionListMemberResponse"/>
    
  <xs:element name="RenameAccountRequest" type="tns:renameAccountRequest"/>
    
  <xs:element name="RenameAccountResponse" type="tns:renameAccountResponse"/>
    
  <xs:element name="RenameCalendarResourceRequest" type="tns:renameCalendarResourceRequest"/>
    
  <xs:element name="RenameCalendarResourceResponse" type="tns:renameCalendarResourceResponse"/>
    
  <xs:element name="RenameCosRequest" type="tns:renameCosRequest"/>
    
  <xs:element name="RenameCosResponse" type="tns:renameCosResponse"/>
    
  <xs:element name="RenameDistributionListRequest" type="tns:renameDistributionListRequest"/>
    
  <xs:element name="RenameDistributionListResponse" type="tns:renameDistributionListResponse"/>
    
  <xs:element name="ResetAccountPasswordRequest" type="tns:resetAccountPasswordRequest"/>
    
  <xs:element name="ResetAccountPasswordResponse" type="tns:resetAccountPasswordResponse"/>
    
  <xs:element name="ResetAllLoggersRequest" type="tns:resetAllLoggersRequest"/>
    
  <xs:element name="ResetAllLoggersResponse" type="tns:resetAllLoggersResponse"/>
    
  <xs:element name="RestoreRequest" type="tns:restoreRequest"/>
    
  <xs:element name="RestoreResponse" type="tns:restoreResponse"/>
    
  <xs:element name="RevokeRightRequest" type="tns:revokeRightRequest"/>
    
  <xs:element name="RevokeRightResponse" type="tns:revokeRightResponse"/>
    
  <xs:element name="RolloverRedoLogRequest" type="tns:rolloverRedoLogRequest"/>
    
  <xs:element name="RolloverRedoLogResponse" type="tns:rolloverRedoLogResponse"/>
    
  <xs:element name="RunUnitTestsRequest" type="tns:runUnitTestsRequest"/>
    
  <xs:element name="RunUnitTestsResponse" type="tns:runUnitTestsResponse"/>
    
  <xs:element name="ScheduleBackupsRequest" type="tns:scheduleBackupsRequest"/>
    
  <xs:element name="ScheduleBackupsResponse" type="tns:scheduleBackupsResponse"/>
    
  <xs:element name="SearchAccountsRequest" type="tns:searchAccountsRequest"/>
    
  <xs:element name="SearchAccountsResponse" type="tns:searchAccountsResponse"/>
    
  <xs:element name="SearchAutoProvDirectoryRequest" type="tns:searchAutoProvDirectoryRequest"/>
    
  <xs:element name="SearchAutoProvDirectoryResponse" type="tns:searchAutoProvDirectoryResponse"/>
    
  <xs:element name="SearchCalendarResourcesRequest" type="tns:searchCalendarResourcesRequest"/>
    
  <xs:element name="SearchCalendarResourcesResponse" type="tns:searchCalendarResourcesResponse"/>
    
  <xs:element name="SearchDirectoryRequest" type="tns:searchDirectoryRequest"/>
    
  <xs:element name="SearchDirectoryResponse" type="tns:searchDirectoryResponse"/>
    
  <xs:element name="SearchGalRequest" type="tns:searchGalRequest"/>
    
  <xs:element name="SearchGalResponse" type="tns:searchGalResponse"/>
    
  <xs:element name="SearchMultiMailboxRequest" type="tns:searchMultiMailboxRequest"/>
    
  <xs:element name="SearchMultiMailboxResponse" type="tns:searchMultiMailboxResponse"/>
    
  <xs:element name="SetCurrentVolumeRequest" type="tns:setCurrentVolumeRequest"/>
    
  <xs:element name="SetCurrentVolumeResponse" type="tns:setCurrentVolumeResponse"/>
    
  <xs:element name="SetPasswordRequest" type="tns:setPasswordRequest"/>
    
  <xs:element name="SetPasswordResponse" type="tns:setPasswordResponse"/>
    
  <xs:element name="SyncGalAccountRequest" type="tns:syncGalAccountRequest"/>
    
  <xs:element name="SyncGalAccountResponse" type="tns:syncGalAccountResponse"/>
    
  <xs:element name="UndeployZimletRequest" type="tns:undeployZimletRequest"/>
    
  <xs:element name="UndeployZimletResponse" type="tns:undeployZimletResponse"/>
    
  <xs:element name="UnloadMailboxRequest" type="tns:unloadMailboxRequest"/>
    
  <xs:element name="UnloadMailboxResponse" type="tns:unloadMailboxResponse"/>
    
  <xs:element name="UnregisterMailboxMoveOutRequest" type="tns:unregisterMailboxMoveOutRequest"/>
    
  <xs:element name="UnregisterMailboxMoveOutResponse" type="tns:unregisterMailboxMoveOutResponse"/>
    
  <xs:element name="UploadDomCertRequest" type="tns:uploadDomCertRequest"/>
    
  <xs:element name="UploadDomCertResponse" type="tns:uploadDomCertResponse"/>
    
  <xs:element name="UploadProxyCARequest" type="tns:uploadProxyCARequest"/>
    
  <xs:element name="UploadProxyCAResponse" type="tns:uploadProxyCAResponse"/>
    
  <xs:element name="VerifyCertKeyRequest" type="tns:verifyCertKeyRequest"/>
    
  <xs:element name="VerifyCertKeyResponse" type="tns:verifyCertKeyResponse"/>
    
  <xs:element name="VerifyIndexRequest" type="tns:verifyIndexRequest"/>
    
  <xs:element name="VerifyIndexResponse" type="tns:verifyIndexResponse"/>
    
  <xs:element name="VerifyStoreManagerRequest" type="tns:verifyStoreManagerRequest"/>
    
  <xs:element name="VerifyStoreManagerResponse" type="tns:verifyStoreManagerResponse"/>
    
  <xs:element name="a" type="tns:attr"/>
    
  <xs:element name="cos" type="tns:dlInfo"/>
    
  <xs:element name="include" type="tns:adminZimletInclude"/>
    
  <xs:element name="includeCSS" type="tns:adminZimletIncludeCSS"/>
    
  <xs:element name="mbox" type="tns:mailboxQuotaInfo"/>
    
  <xs:element name="meta" type="tns:adminCustomMetadata"/>
    
  <xs:element name="query" type="tns:queueQuery"/>
    
  <xs:element name="server" type="tns:serverInfo"/>
    
  <xs:element name="serverExtension" type="tns:zimletServerExtension"/>
    
  <xs:element name="target" type="tns:adminZimletTarget"/>
    
  <xs:element name="values" type="tns:statsValueWrapper"/>
    
  <xs:complexType name="domainSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="tns:domainBy"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="attr">
        
    <xs:simpleContent>
            
      <xs:extension base="ns1:keyValuePair"/>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="resetAccountPasswordRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="resetAccountPasswordResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllAddressListsRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAllAddressListsResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="addressLists">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="addressList" type="ns2:addressListInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteAddressListRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteAddressListResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="abortHsmRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="abortHsmResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="aborted" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="abortXMbxSearchRequest">
        
    <xs:sequence>
            
      <xs:element name="searchtask" type="tns:searchID"/>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="searchID">
        
    <xs:sequence/>
        
    <xs:attribute name="searchID" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="abortXMbxSearchResponse">
        
    <xs:sequence>
            
      <xs:element name="searchtask" type="tns:searchNode"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="searchNode">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="adminAttrsImpl">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:a"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="addAccountAliasRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="alias" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="addAccountAliasResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="addAccountLoggerRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="id" type="xs:string"/>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
            
      <xs:element name="logger" type="tns:loggerInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="loggerInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="category" type="xs:string" use="required"/>
        
    <xs:attribute name="level" type="ns1:loggingLevel"/>
      
  </xs:complexType>
    
  <xs:complexType name="addAccountLoggerResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="logger" type="tns:loggerInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="addDistributionListAliasRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="alias" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="addDistributionListAliasResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="addDistributionListMemberRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" name="dlm" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="addDistributionListMemberResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="addGalSyncDataSourceRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element name="account" type="ns1:accountSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="domain" type="xs:string" use="required"/>
                
        <xs:attribute name="type" type="tns:galMode" use="required"/>
                
        <xs:attribute name="folder" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="addGalSyncDataSourceResponse">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="accountInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:sequence/>
                
        <xs:attribute name="isExternal" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="adminObjectInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:a"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminCreateWaitSetRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="add">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:waitSetAddSpec"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="defTypes" type="xs:string" use="required"/>
        
    <xs:attribute name="allAccounts" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminCreateWaitSetResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="ns1:idAndType"/>
          
    </xs:sequence>
        
    <xs:attribute name="waitSet" type="xs:string" use="required"/>
        
    <xs:attribute name="defTypes" type="xs:string" use="required"/>
        
    <xs:attribute name="seq" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminDestroyWaitSetRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="waitSet" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminDestroyWaitSetResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="waitSet" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminWaitSetRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="add">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:waitSetAddSpec"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element minOccurs="0" name="update">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:waitSetAddSpec"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element minOccurs="0" name="remove">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:id"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="waitSet" type="xs:string" use="required"/>
        
    <xs:attribute name="seq" type="xs:string" use="required"/>
        
    <xs:attribute name="block" type="xs:boolean"/>
        
    <xs:attribute name="defTypes" type="xs:string"/>
        
    <xs:attribute name="timeout" type="xs:long"/>
        
    <xs:attribute name="expand" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminWaitSetResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:accountWithModifications"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="ns1:idAndType"/>
          
    </xs:sequence>
        
    <xs:attribute name="waitSet" type="xs:string" use="required"/>
        
    <xs:attribute name="canceled" type="xs:boolean"/>
        
    <xs:attribute name="seq" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="authRequest">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="authToken" type="xs:string"/>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="virtualHost" type="xs:string"/>
          
    </xs:all>
        
    <xs:attribute name="persistAuthTokenCookie" type="xs:boolean"/>
        
    <xs:attribute name="csrfTokenSecured" type="xs:boolean"/>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="password" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="authResponse">
        
    <xs:sequence>
            
      <xs:element name="authToken" type="xs:string"/>
            
      <xs:element minOccurs="0" name="csrfToken" type="xs:string"/>
            
      <xs:element name="lifetime" type="xs:long"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="autoCompleteGalRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="domain" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="ns1:galSearchType"/>
        
    <xs:attribute name="galAcctId" type="xs:string"/>
        
    <xs:attribute name="limit" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="autoCompleteGalResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cn" type="tns:contactInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean"/>
        
    <xs:attribute name="tokenizeKey" type="xs:boolean"/>
        
    <xs:attribute name="paginationSupported" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="contactInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:meta"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:contactAttr"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="m" type="tns:contactGroupMember"/>
          
    </xs:sequence>
        
    <xs:attribute name="sf" type="xs:string"/>
        
    <xs:attribute name="exp" type="xs:boolean"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="l" type="xs:string"/>
        
    <xs:attribute name="f" type="xs:string"/>
        
    <xs:attribute name="t" type="xs:string"/>
        
    <xs:attribute name="tn" type="xs:string"/>
        
    <xs:attribute name="md" type="xs:long"/>
        
    <xs:attribute name="ms" type="xs:int"/>
        
    <xs:attribute name="d" type="xs:long"/>
        
    <xs:attribute name="rev" type="xs:int"/>
        
    <xs:attribute name="fileAsStr" type="xs:string"/>
        
    <xs:attribute name="email" type="xs:string"/>
        
    <xs:attribute name="email2" type="xs:string"/>
        
    <xs:attribute name="email3" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:string"/>
        
    <xs:attribute name="dlist" type="xs:string"/>
        
    <xs:attribute name="ref" type="xs:string"/>
        
    <xs:attribute name="tooManyMembers" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminCustomMetadata">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminKeyValuePairs">
                
        <xs:sequence/>
                
        <xs:attribute name="section" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="adminKeyValuePairs">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:keyValuePair"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="contactGroupMember">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cn" type="tns:contactInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
        
    <xs:attribute name="value" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="autoProvAccountRequest">
        
    <xs:sequence>
            
      <xs:element name="domain" type="tns:domainSelector"/>
            
      <xs:element name="principal" type="tns:principalSelector"/>
            
      <xs:element minOccurs="0" name="password" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="principalSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="ns1:autoProvPrincipalBy" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="autoProvAccountResponse">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="autoProvTaskControlRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="action" type="tns:action" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="autoProvTaskControlResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="status" type="tns:status" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupAccountQueryRequest">
        
    <xs:sequence>
            
      <xs:element name="query" type="tns:backupAccountQuerySpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="backupAccountQuerySpec">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:name"/>
          
    </xs:sequence>
        
    <xs:attribute name="target" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:string"/>
        
    <xs:attribute name="from" type="xs:long"/>
        
    <xs:attribute name="to" type="xs:long"/>
        
    <xs:attribute name="backupListOffset" type="xs:int"/>
        
    <xs:attribute name="backupListCount" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="name">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupAccountQueryResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:backupAccountQueryInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="backupAccountQueryInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="backup" type="tns:backupAccountQueryBackupInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="more" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupAccountQueryBackupInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="label" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:string"/>
        
    <xs:attribute name="start" type="xs:long"/>
        
    <xs:attribute name="end" type="xs:long"/>
        
    <xs:attribute name="accountId" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupQueryRequest">
        
    <xs:sequence>
            
      <xs:element name="query" type="tns:backupQuerySpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="backupQuerySpec">
        
    <xs:sequence/>
        
    <xs:attribute name="target" type="xs:string"/>
        
    <xs:attribute name="label" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:string"/>
        
    <xs:attribute name="from" type="xs:long"/>
        
    <xs:attribute name="to" type="xs:long"/>
        
    <xs:attribute name="stats" type="xs:boolean"/>
        
    <xs:attribute name="backupListOffset" type="xs:int"/>
        
    <xs:attribute name="backupListCount" type="xs:int"/>
        
    <xs:attribute name="accountListStatus" type="xs:string"/>
        
    <xs:attribute name="accountListOffset" type="xs:int"/>
        
    <xs:attribute name="accountListCount" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupQueryResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="backup" type="tns:backupQueryInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="totalSpace" type="xs:long" use="required"/>
        
    <xs:attribute name="freeSpace" type="xs:long" use="required"/>
        
    <xs:attribute name="more" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupQueryInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="currentAccounts" type="tns:currentAccounts"/>
            
      <xs:element minOccurs="0" name="accounts" type="tns:backupQueryAccounts"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="tns:backupQueryError"/>
            
      <xs:element minOccurs="0" name="stats">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="counter" type="tns:backupQueryCounter"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="label" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:string"/>
        
    <xs:attribute name="aborted" type="xs:boolean"/>
        
    <xs:attribute name="start" type="xs:long"/>
        
    <xs:attribute name="end" type="xs:long"/>
        
    <xs:attribute name="minRedoSeq" type="xs:long"/>
        
    <xs:attribute name="maxRedoSeq" type="xs:long"/>
        
    <xs:attribute name="live" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="currentAccounts">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:name"/>
          
    </xs:sequence>
        
    <xs:attribute name="total" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupQueryAccounts">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:backupQueryAccountStatus"/>
          
    </xs:sequence>
        
    <xs:attribute name="total" type="xs:int"/>
        
    <xs:attribute name="completionCount" type="xs:int"/>
        
    <xs:attribute name="errorCount" type="xs:int"/>
        
    <xs:attribute name="more" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupQueryAccountStatus">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="status" type="xs:string" use="required"/>
                
        <xs:attribute name="errorMessage" type="xs:string"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="backupQueryError">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="errorMessage" type="xs:string"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="backupQueryCounter">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="unit" type="xs:string" use="required"/>
        
    <xs:attribute name="sum" type="xs:long" use="required"/>
        
    <xs:attribute name="numSamples" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupRequest">
        
    <xs:sequence>
            
      <xs:element name="backup" type="tns:backupSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="backupSpec">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="fileCopier" type="tns:fileCopierSpec"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:name"/>
          
    </xs:sequence>
        
    <xs:attribute name="method" type="xs:string"/>
        
    <xs:attribute name="target" type="xs:string"/>
        
    <xs:attribute name="label" type="xs:string"/>
        
    <xs:attribute name="before" type="xs:string"/>
        
    <xs:attribute name="sync" type="xs:boolean"/>
        
    <xs:attribute name="searchIndex" type="xs:string"/>
        
    <xs:attribute name="blobs" type="xs:string"/>
        
    <xs:attribute name="secondaryBlobs" type="xs:string"/>
        
    <xs:attribute name="zip" type="xs:boolean"/>
        
    <xs:attribute name="zipStore" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="fileCopierSpec">
        
    <xs:sequence/>
        
    <xs:attribute name="fcMethod" type="xs:string"/>
        
    <xs:attribute name="fcIOType" type="xs:string"/>
        
    <xs:attribute name="fcOIOCopyBufferSize" type="xs:int"/>
        
    <xs:attribute name="fcAsyncQueueCapacity" type="xs:int"/>
        
    <xs:attribute name="fcParallelWorkers" type="xs:int"/>
        
    <xs:attribute name="fcPipes" type="xs:int"/>
        
    <xs:attribute name="fcPipeBufferSize" type="xs:int"/>
        
    <xs:attribute name="fcPipeReadersPerPipe" type="xs:int"/>
        
    <xs:attribute name="fcPipeWritersPerPipe" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="backupResponse">
        
    <xs:sequence>
            
      <xs:element name="backup" type="tns:backupInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="backupInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="label" type="xs:string"/>
        
    <xs:attribute name="incr-label" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkAuthConfigRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="password" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="checkAuthConfigResponse">
        
    <xs:sequence>
            
      <xs:element name="code" type="xs:string"/>
            
      <xs:element minOccurs="0" name="message" type="xs:string"/>
            
      <xs:element name="bindDn" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="checkBlobConsistencyRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="volume" type="tns:intIdAttr"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="mbox" type="tns:intIdAttr"/>
          
    </xs:sequence>
        
    <xs:attribute name="checkSize" type="xs:boolean"/>
        
    <xs:attribute name="reportUsedBlobs" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="intIdAttr">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkBlobConsistencyResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="mbox" type="tns:mailboxBlobConsistency"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="mailboxBlobConsistency">
        
    <xs:sequence>
            
      <xs:element name="missingBlobs">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="item" type="tns:missingBlobInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element name="incorrectSize">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="item" type="tns:incorrectBlobSizeInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element name="unexpectedBlobs">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="blob" type="tns:unexpectedBlobInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element name="incorrectRevision">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="item" type="tns:incorrectBlobRevisionInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element name="usedBlobs">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="item" type="tns:usedBlobInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="missingBlobInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
        
    <xs:attribute name="rev" type="xs:int" use="required"/>
        
    <xs:attribute name="s" type="xs:long" use="required"/>
        
    <xs:attribute name="volumeId" type="xs:short" use="required"/>
        
    <xs:attribute name="blobPath" type="xs:string" use="required"/>
        
    <xs:attribute name="external" type="xs:boolean" use="required"/>
        
    <xs:attribute name="version" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="incorrectBlobSizeInfo">
        
    <xs:sequence>
            
      <xs:element name="blob" type="tns:blobSizeInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
        
    <xs:attribute name="rev" type="xs:int" use="required"/>
        
    <xs:attribute name="s" type="xs:long" use="required"/>
        
    <xs:attribute name="volumeId" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="blobSizeInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="path" type="xs:string" use="required"/>
        
    <xs:attribute name="s" type="xs:long" use="required"/>
        
    <xs:attribute name="fileSize" type="xs:long" use="required"/>
        
    <xs:attribute name="external" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="unexpectedBlobInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="volumeId" type="xs:short" use="required"/>
        
    <xs:attribute name="path" type="xs:string" use="required"/>
        
    <xs:attribute name="fileSize" type="xs:long" use="required"/>
        
    <xs:attribute name="external" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="incorrectBlobRevisionInfo">
        
    <xs:sequence>
            
      <xs:element name="blob" type="tns:blobRevisionInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
        
    <xs:attribute name="rev" type="xs:int" use="required"/>
        
    <xs:attribute name="s" type="xs:long" use="required"/>
        
    <xs:attribute name="volumeId" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="blobRevisionInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="path" type="xs:string" use="required"/>
        
    <xs:attribute name="fileSize" type="xs:long" use="required"/>
        
    <xs:attribute name="rev" type="xs:int" use="required"/>
        
    <xs:attribute name="external" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="usedBlobInfo">
        
    <xs:sequence>
            
      <xs:element name="blob" type="tns:blobSizeInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
        
    <xs:attribute name="rev" type="xs:int" use="required"/>
        
    <xs:attribute name="s" type="xs:long" use="required"/>
        
    <xs:attribute name="volumeId" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkDirectoryRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="directory" type="tns:checkDirSelector"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="checkDirSelector">
        
    <xs:sequence/>
        
    <xs:attribute name="path" type="xs:string" use="required"/>
        
    <xs:attribute name="create" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkDirectoryResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="directory" type="tns:dirPathInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="dirPathInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="path" type="xs:string" use="required"/>
        
    <xs:attribute name="exists" type="xs:boolean" use="required"/>
        
    <xs:attribute name="isDirectory" type="xs:boolean" use="required"/>
        
    <xs:attribute name="readable" type="xs:boolean" use="required"/>
        
    <xs:attribute name="writable" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkExchangeAuthRequest">
        
    <xs:sequence>
            
      <xs:element name="auth" type="tns:exchangeAuthSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="exchangeAuthSpec">
        
    <xs:sequence/>
        
    <xs:attribute name="url" type="xs:string" use="required"/>
        
    <xs:attribute name="user" type="xs:string" use="required"/>
        
    <xs:attribute name="pass" type="xs:string" use="required"/>
        
    <xs:attribute name="scheme" type="tns:authScheme" use="required"/>
        
    <xs:attribute name="type" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkExchangeAuthResponse">
        
    <xs:sequence>
            
      <xs:element name="code" type="xs:string"/>
            
      <xs:element minOccurs="0" name="message" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="checkGalConfigRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="query" type="tns:limitedQuery"/>
                    
          <xs:element minOccurs="0" name="action" type="xs:string"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="limitedQuery">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="limit" type="xs:long"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="checkGalConfigResponse">
        
    <xs:sequence>
            
      <xs:element name="code" type="xs:string"/>
            
      <xs:element minOccurs="0" name="message" type="xs:string"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cn" type="tns:galContactInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="galContactInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="checkHealthRequest">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="checkHealthResponse">
        
    <xs:all/>
        
    <xs:attribute name="healthy" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkHostnameResolveRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="hostname" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkHostnameResolveResponse">
        
    <xs:sequence>
            
      <xs:element name="code" type="xs:string"/>
            
      <xs:element minOccurs="0" name="message" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="checkPasswordStrengthRequest">
        
    <xs:all/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="password" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="checkPasswordStrengthResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="checkRightRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element name="target" type="tns:effectiveRightsTargetSelector"/>
                    
          <xs:element name="grantee" type="tns:granteeSelector"/>
                    
          <xs:element name="right" type="tns:checkedRight"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="effectiveRightsTargetSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="type" type="ns1:targetType" use="required"/>
                
        <xs:attribute name="by" type="ns1:targetBy"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="granteeSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="type" type="ns1:granteeType"/>
                
        <xs:attribute name="by" type="tns:granteeBy"/>
                
        <xs:attribute name="secret" type="xs:string"/>
                
        <xs:attribute name="all" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:simpleType name="checkedRight">
        
    <xs:restriction base="xs:string"/>
      
  </xs:simpleType>
    
  <xs:complexType name="checkRightResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="via" type="tns:rightViaInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="allow" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="rightViaInfo">
        
    <xs:all>
            
      <xs:element name="target" type="tns:targetWithType"/>
            
      <xs:element name="grantee" type="tns:granteeWithType"/>
            
      <xs:element name="right" type="tns:checkedRight"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="targetWithType">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="type" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="granteeWithType">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="type" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="clearCookieRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cookie" type="tns:cookieSpec"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="cookieSpec">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="clearCookieResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="compactIndexRequest">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:mailboxByAccountIdSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="action" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxByAccountIdSelector">
        
    <xs:all/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="compactIndexResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="status" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="computeAggregateQuotaUsageRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="computeAggregateQuotaUsageResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="domain" type="tns:domainAggregateQuotaInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="domainAggregateQuotaInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="used" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="configureZimletRequest">
        
    <xs:sequence>
            
      <xs:element name="content" type="tns:attachmentIdAttrib"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="attachmentIdAttrib">
        
    <xs:sequence/>
        
    <xs:attribute name="aid" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="configureZimletResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="contactBackupRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="servers">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" name="server" type="tns:serverSelector"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="op" type="tns:operation" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="serverSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="tns:serverBy"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="contactBackupResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="servers">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" name="server" type="tns:contactBackupServer"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="contactBackupServer">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="status" type="tns:contactBackupStatus" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="copyCosRequest">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="name" type="xs:string"/>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="cosSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="tns:cosBy"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="copyCosResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="cosInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="tns:cosInfoAttr"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="isDefaultCos" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="cosInfoAttr">
        
    <xs:simpleContent>
            
      <xs:extension base="tns:attr">
                
        <xs:attribute name="c" type="xs:boolean"/>
                
        <xs:attribute name="pd" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="countAccountRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="countAccountResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cos" type="tns:cosCountInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="cosCountInfo">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:long">
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="countObjectsRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="tns:countObjectsType" use="required"/>
        
    <xs:attribute name="onlyRelated" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="countObjectsResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="num" type="xs:long" use="required"/>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="createAccountRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="password" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createAccountResponse">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createAddressListRequest">
        
    <xs:sequence>
            
      <xs:element name="name" type="xs:string"/>
            
      <xs:element minOccurs="0" name="desc" type="xs:string"/>
            
      <xs:element minOccurs="0" name="searchFilter" type="tns:entrySearchFilterInfo"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="ns1:galSearchType"/>
      
  </xs:complexType>
    
  <xs:complexType name="entrySearchFilterInfo">
        
    <xs:sequence>
            
      <xs:choice minOccurs="0">
                
        <xs:element name="conds" type="tns:entrySearchFilterMultiCond"/>
                
        <xs:element name="cond" type="tns:entrySearchFilterSingleCond"/>
              
      </xs:choice>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="entrySearchFilterMultiCond">
        
    <xs:sequence>
            
      <xs:choice maxOccurs="unbounded" minOccurs="0">
                
        <xs:element name="conds" type="tns:entrySearchFilterMultiCond"/>
                
        <xs:element name="cond" type="tns:entrySearchFilterSingleCond"/>
              
      </xs:choice>
          
    </xs:sequence>
        
    <xs:attribute name="not" type="xs:boolean"/>
        
    <xs:attribute name="or" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="entrySearchFilterSingleCond">
        
    <xs:sequence/>
        
    <xs:attribute name="not" type="xs:boolean"/>
        
    <xs:attribute name="attr" type="xs:string" use="required"/>
        
    <xs:attribute name="op" type="xs:string" use="required"/>
        
    <xs:attribute name="value" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="createAddressListResponse">
        
    <xs:sequence>
            
      <xs:element name="id" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createArchiveRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="archive" type="tns:archiveSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="archiveSpec">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="name" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
                    
          <xs:element minOccurs="0" name="password" type="xs:string"/>
                  
        </xs:sequence>
                
        <xs:attribute name="create" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createArchiveResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="createCalendarResourceRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="password" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createCalendarResourceResponse">
        
    <xs:sequence>
            
      <xs:element name="calresource" type="tns:calendarResourceInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="calendarResourceInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createCosRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element name="name" type="xs:string"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createCosResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createDataSourceRequest">
        
    <xs:sequence>
            
      <xs:element name="dataSource" type="tns:dataSourceSpecifier"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="dataSourceSpecifier">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="type" type="tns:dataSourceType" use="required"/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createDataSourceResponse">
        
    <xs:sequence>
            
      <xs:element name="dataSource" type="tns:dataSourceInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="dataSourceInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
                
        <xs:attribute name="type" type="tns:dataSourceType" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createDistributionListRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="dynamic" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createDistributionListResponse">
        
    <xs:sequence>
            
      <xs:element name="dl" type="tns:distributionListInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="distributionListInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:sequence>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="dlm" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="owners">
                        
            <xs:complexType>
                            
              <xs:sequence>
                                
                <xs:element maxOccurs="unbounded" minOccurs="0" name="owner" type="tns:granteeInfo"/>
                              
              </xs:sequence>
                          
              <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
            </xs:complexType>
                      
          </xs:element>
                  
        </xs:sequence>
                
        <xs:attribute name="dynamic" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="granteeInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="type" type="ns1:granteeType"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="createHABGroupRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:createDistributionListRequest">
                
        <xs:sequence/>
                
        <xs:attribute name="habDisplayName" type="xs:string"/>
                
        <xs:attribute name="habOrgUnit" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createHABGroupResponse">
        
    <xs:complexContent>
            
      <xs:extension base="tns:createDistributionListResponse">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createDomainRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createDomainResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="domainInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:all/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createGalSyncAccountRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element name="account" type="ns1:accountSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="domain" type="xs:string" use="required"/>
                
        <xs:attribute name="type" type="tns:galMode" use="required"/>
                
        <xs:attribute name="password" type="xs:string"/>
                
        <xs:attribute name="folder" type="xs:string"/>
                
        <xs:attribute name="server" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createGalSyncAccountResponse">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createServerRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:all/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createServerResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" ref="tns:server"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="serverInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:all/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createSystemRetentionPolicyRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
            
      <xs:element minOccurs="0" name="keep" type="tns:policyHolder"/>
            
      <xs:element minOccurs="0" name="purge" type="tns:policyHolder"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="policyHolder">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" ref="ns3:policy"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createSystemRetentionPolicyResponse">
        
    <xs:sequence>
            
      <xs:element ref="ns3:policy"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createVolumeRequest">
        
    <xs:sequence>
            
      <xs:element name="volume" type="tns:volumeInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="volumeInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:short" use="required"/>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="rootpath" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:short" use="required"/>
        
    <xs:attribute name="compressBlobs" type="xs:boolean"/>
        
    <xs:attribute name="compressionThreshold" type="xs:long" use="required"/>
        
    <xs:attribute name="mgbits" type="xs:short" use="required"/>
        
    <xs:attribute name="mbits" type="xs:short" use="required"/>
        
    <xs:attribute name="fgbits" type="xs:short" use="required"/>
        
    <xs:attribute name="fbits" type="xs:short" use="required"/>
        
    <xs:attribute name="isCurrent" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="createVolumeResponse">
        
    <xs:sequence>
            
      <xs:element name="volume" type="tns:volumeInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createXMPPComponentRequest">
        
    <xs:sequence>
            
      <xs:element name="xmppcomponent" type="tns:xmppComponentSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="xmppComponentSpec">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element name="domain" type="tns:domainSelector"/>
                    
          <xs:element name="server" type="tns:serverSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createXMPPComponentResponse">
        
    <xs:sequence>
            
      <xs:element name="xmppcomponent" type="tns:xmppComponentInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="xmppComponentInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
                
        <xs:attribute name="x-domainName" type="xs:string"/>
                
        <xs:attribute name="x-serverName" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createXMbxSearchRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminKeyValuePairs">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createXMbxSearchResponse">
        
    <xs:sequence>
            
      <xs:element name="searchtask" type="tns:searchNode"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="createZimletRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="createZimletResponse">
        
    <xs:sequence>
            
      <xs:element name="zimlet" type="tns:zimletInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="zimletInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:sequence/>
                
        <xs:attribute name="hasKeyword" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="dedupeBlobsRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="volume" type="tns:intIdAttr"/>
          
    </xs:sequence>
        
    <xs:attribute name="action" type="tns:dedupAction" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="dedupeBlobsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="volumeBlobsProgress" type="tns:volumeIdAndProgress"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="blobDigestsProgress" type="tns:volumeIdAndProgress"/>
          
    </xs:sequence>
        
    <xs:attribute name="status" type="tns:dedupStatus"/>
        
    <xs:attribute name="totalSize" type="xs:long"/>
        
    <xs:attribute name="totalCount" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="volumeIdAndProgress">
        
    <xs:sequence/>
        
    <xs:attribute name="volumeId" type="xs:string" use="required"/>
        
    <xs:attribute name="progress" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="delegateAuthRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="duration" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="delegateAuthResponse">
        
    <xs:sequence>
            
      <xs:element name="authToken" type="xs:string"/>
            
      <xs:element name="lifetime" type="xs:long"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteAccountRequest">
        
    <xs:all/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteAccountResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteCalendarResourceRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteCalendarResourceResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteCosRequest">
        
    <xs:sequence>
            
      <xs:element name="id" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteCosResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteDataSourceRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element name="dataSource" type="ns1:id"/>
                  
        </xs:sequence>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="deleteDataSourceResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteDistributionListRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="cascadeDelete" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteDistributionListResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteDomainRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteDomainResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteGalSyncAccountRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteGalSyncAccountResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteMailboxRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="mbox" type="tns:mailboxByAccountIdSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteMailboxResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="mbox" type="tns:mailboxWithMailboxId"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxWithMailboxId">
        
    <xs:all/>
        
    <xs:attribute name="mbxid" type="xs:int" use="required"/>
        
    <xs:attribute name="id" type="xs:string"/>
        
    <xs:attribute name="s" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteServerRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteServerResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteSystemRetentionPolicyRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
            
      <xs:element ref="ns3:policy"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteSystemRetentionPolicyResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="deleteVolumeRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteVolumeResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteXMPPComponentRequest">
        
    <xs:sequence>
            
      <xs:element name="xmppcomponent" type="tns:xmppComponentSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="xmppComponentSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="tns:xmppComponentBy" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="deleteXMPPComponentResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteXMbxSearchRequest">
        
    <xs:sequence>
            
      <xs:element name="searchtask" type="tns:searchID"/>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteXMbxSearchResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deleteZimletRequest">
        
    <xs:sequence>
            
      <xs:element name="zimlet" type="ns1:namedElement"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="deleteZimletResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="deployZimletRequest">
        
    <xs:sequence>
            
      <xs:element name="content" type="tns:attachmentIdAttrib"/>
          
    </xs:sequence>
        
    <xs:attribute name="action" type="xs:string" use="required"/>
        
    <xs:attribute name="flush" type="xs:boolean"/>
        
    <xs:attribute name="synchronous" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="deployZimletResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="progress" type="tns:zimletDeploymentStatus"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="zimletDeploymentStatus">
        
    <xs:sequence/>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
        
    <xs:attribute name="status" type="xs:string" use="required"/>
        
    <xs:attribute name="error" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="disableArchiveRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="disableArchiveResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="dumpSessionsRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="listSessions" type="xs:boolean"/>
        
    <xs:attribute name="groupByAccount" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="dumpSessionsResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="soap" type="tns:infoForSessionType"/>
            
      <xs:element minOccurs="0" name="imap" type="tns:infoForSessionType"/>
            
      <xs:element minOccurs="0" name="admin" type="tns:infoForSessionType"/>
            
      <xs:element minOccurs="0" name="wiki" type="tns:infoForSessionType"/>
            
      <xs:element minOccurs="0" name="synclistener" type="tns:infoForSessionType"/>
            
      <xs:element minOccurs="0" name="waitset" type="tns:infoForSessionType"/>
          
    </xs:sequence>
        
    <xs:attribute name="activeSessions" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="infoForSessionType">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="zid" type="tns:accountSessionInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="s" type="tns:sessionInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="activeAccounts" type="xs:int"/>
        
    <xs:attribute name="activeSessions" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="accountSessionInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="s" type="tns:sessionInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="sessionInfo">
        
    <xs:sequence>
            
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
          
    </xs:sequence>
        
    <xs:attribute name="zid" type="xs:string"/>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="sid" type="xs:string" use="required"/>
        
    <xs:attribute name="cd" type="xs:long" use="required"/>
        
    <xs:attribute name="ld" type="xs:long" use="required"/>
        
    <xs:anyAttribute namespace="##other" processContents="skip"/>
      
  </xs:complexType>
    
  <xs:complexType name="enableArchiveRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="archive" type="tns:archiveSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="enableArchiveResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="exportAndDeleteItemsRequest">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:exportAndDeleteMailboxSpec"/>
          
    </xs:sequence>
        
    <xs:attribute name="exportDir" type="xs:string"/>
        
    <xs:attribute name="exportFilenamePrefix" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="exportAndDeleteMailboxSpec">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="item" type="tns:exportAndDeleteItemSpec"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="exportAndDeleteItemSpec">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
        
    <xs:attribute name="version" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="exportAndDeleteItemsResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="exportMailboxRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:exportMailboxSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="exportMailboxSelector">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="dest" type="xs:string" use="required"/>
        
    <xs:attribute name="destPort" type="xs:int"/>
        
    <xs:attribute name="tempDir" type="xs:string"/>
        
    <xs:attribute name="overwrite" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="exportMailboxResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="failoverClusterServiceRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="service" type="tns:failoverClusterServiceSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="failoverClusterServiceSpec">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="newServer" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="failoverClusterServiceResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="fixCalendarEndTimeRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="ns1:namedElement"/>
          
    </xs:sequence>
        
    <xs:attribute name="sync" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="fixCalendarEndTimeResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="fixCalendarPriorityRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="ns1:namedElement"/>
          
    </xs:sequence>
        
    <xs:attribute name="sync" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="fixCalendarPriorityResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="fixCalendarTZRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="ns1:namedElement"/>
            
      <xs:element minOccurs="0" name="tzfixup">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="fixupRule" type="tns:tzFixupRule"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="sync" type="xs:boolean"/>
        
    <xs:attribute name="after" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="tzFixupRule">
        
    <xs:all>
            
      <xs:element name="match" type="tns:tzFixupRuleMatch"/>
            
      <xs:element minOccurs="0" name="touch" type="tns:simpleElement"/>
            
      <xs:element minOccurs="0" name="replace" type="tns:tzReplaceInfo"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="tzFixupRuleMatch">
        
    <xs:sequence>
            
      <xs:choice maxOccurs="unbounded" minOccurs="0">
                
        <xs:element name="any" type="tns:simpleElement"/>
                
        <xs:element name="tzid" type="ns1:id"/>
                
        <xs:element name="nonDst" type="tns:offset"/>
                
        <xs:element name="rules" type="tns:tzFixupRuleMatchRules"/>
                
        <xs:element name="dates" type="tns:tzFixupRuleMatchDates"/>
              
      </xs:choice>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="simpleElement">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="offset">
        
    <xs:sequence/>
        
    <xs:attribute name="offset" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="tzFixupRuleMatchRules">
        
    <xs:all>
            
      <xs:element name="standard" type="tns:tzFixupRuleMatchRule"/>
            
      <xs:element name="daylight" type="tns:tzFixupRuleMatchRule"/>
          
    </xs:all>
        
    <xs:attribute name="stdoff" type="xs:long" use="required"/>
        
    <xs:attribute name="dayoff" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="tzFixupRuleMatchRule">
        
    <xs:sequence/>
        
    <xs:attribute name="mon" type="xs:int" use="required"/>
        
    <xs:attribute name="week" type="xs:int" use="required"/>
        
    <xs:attribute name="wkday" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="tzFixupRuleMatchDates">
        
    <xs:all>
            
      <xs:element name="standard" type="tns:tzFixupRuleMatchDate"/>
            
      <xs:element name="daylight" type="tns:tzFixupRuleMatchDate"/>
          
    </xs:all>
        
    <xs:attribute name="stdoff" type="xs:long" use="required"/>
        
    <xs:attribute name="dayoff" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="tzFixupRuleMatchDate">
        
    <xs:sequence/>
        
    <xs:attribute name="mon" type="xs:int" use="required"/>
        
    <xs:attribute name="mday" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="tzReplaceInfo">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="wellKnownTz" type="ns1:id"/>
            
      <xs:element minOccurs="0" name="tz" type="tns:calTZInfo"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="calTZInfo">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="standard" type="ns1:tzOnsetInfo"/>
            
      <xs:element minOccurs="0" name="daylight" type="ns1:tzOnsetInfo"/>
          
    </xs:all>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="stdoff" type="xs:int" use="required"/>
        
    <xs:attribute name="dayoff" type="xs:int" use="required"/>
        
    <xs:attribute name="stdname" type="xs:string"/>
        
    <xs:attribute name="dayname" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="fixCalendarTZResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="flushCacheRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cache" type="tns:cacheSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="cacheSelector">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:cacheEntrySelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
        
    <xs:attribute name="allServers" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="cacheEntrySelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="tns:cacheEntryBy"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="flushCacheResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="genCSRRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="C" type="xs:string"/>
            
      <xs:element minOccurs="0" name="ST" type="xs:string"/>
            
      <xs:element minOccurs="0" name="L" type="xs:string"/>
            
      <xs:element minOccurs="0" name="O" type="xs:string"/>
            
      <xs:element minOccurs="0" name="OU" type="xs:string"/>
            
      <xs:element minOccurs="0" name="CN" type="xs:string"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="SubjectAltName" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
        
    <xs:attribute name="new" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="xs:string"/>
        
    <xs:attribute name="digest" type="xs:string"/>
        
    <xs:attribute name="keysize" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="genCSRResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAccountInfoRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAccountInfoResponse">
        
    <xs:sequence>
            
      <xs:element name="name" type="xs:string"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:a"/>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="soapURL" type="xs:string"/>
            
      <xs:element minOccurs="0" name="adminSoapURL" type="xs:string"/>
            
      <xs:element minOccurs="0" name="publicMailURL" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAccountLoggersRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="id" type="xs:string"/>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAccountLoggersResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="logger" type="tns:loggerInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAccountMembershipRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAccountMembershipResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="dl" type="tns:dlInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="dlInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:all/>
                
        <xs:attribute name="dynamic" type="xs:boolean"/>
                
        <xs:attribute name="via" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getAccountRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="applyCos" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getAccountResponse">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAdminConsoleUICompRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="dl" type="tns:distributionListSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="distributionListSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="tns:distributionListBy"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="getAdminConsoleUICompResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="tns:inheritedFlaggedValue"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="inheritedFlaggedValue">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="inherited" type="xs:boolean" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="getAdminExtensionZimletsRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getAdminExtensionZimletsResponse">
        
    <xs:sequence>
            
      <xs:element name="zimlets">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="zimlet" type="tns:adminZimletInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="adminZimletInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="zimletContext" type="tns:adminZimletContext"/>
            
      <xs:element minOccurs="0" name="zimlet" type="tns:adminZimletDesc"/>
            
      <xs:element minOccurs="0" name="zimletConfig" type="tns:adminZimletConfigInfo"/>
            
      <xs:any namespace="##other" processContents="skip"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="adminZimletContext">
        
    <xs:sequence/>
        
    <xs:attribute name="baseUrl" type="xs:string" use="required"/>
        
    <xs:attribute name="priority" type="xs:int"/>
        
    <xs:attribute name="presence" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminZimletDesc">
        
    <xs:sequence>
            
      <xs:choice maxOccurs="unbounded" minOccurs="0">
                
        <xs:element ref="tns:serverExtension"/>
                
        <xs:element ref="tns:include"/>
                
        <xs:element ref="tns:includeCSS"/>
                
        <xs:element ref="tns:target"/>
                
        <xs:any namespace="##other" processContents="skip"/>
              
      </xs:choice>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="version" type="xs:string"/>
        
    <xs:attribute name="description" type="xs:string"/>
        
    <xs:attribute name="extension" type="xs:string"/>
        
    <xs:attribute name="target" type="xs:string"/>
        
    <xs:attribute name="label" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="zimletServerExtension">
        
    <xs:sequence/>
        
    <xs:attribute name="hasKeyword" type="xs:string"/>
        
    <xs:attribute name="extensionClass" type="xs:string"/>
        
    <xs:attribute name="regex" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:simpleType name="adminZimletInclude">
        
    <xs:restriction base="xs:string"/>
      
  </xs:simpleType>
    
  <xs:simpleType name="adminZimletIncludeCSS">
        
    <xs:restriction base="xs:string"/>
      
  </xs:simpleType>
    
  <xs:simpleType name="adminZimletTarget">
        
    <xs:restriction base="xs:string"/>
      
  </xs:simpleType>
    
  <xs:complexType name="adminZimletConfigInfo">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="global" type="tns:adminZimletGlobalConfigInfo"/>
            
      <xs:element minOccurs="0" name="host" type="tns:adminZimletHostConfigInfo"/>
          
    </xs:all>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="version" type="xs:string"/>
        
    <xs:attribute name="description" type="xs:string"/>
        
    <xs:attribute name="extension" type="xs:string"/>
        
    <xs:attribute name="target" type="xs:string"/>
        
    <xs:attribute name="label" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="adminZimletGlobalConfigInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="tns:adminZimletProperty"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="adminZimletProperty">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="name" type="xs:string"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="adminZimletHostConfigInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="tns:adminZimletProperty"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAdminSavedSearchesRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="search" type="ns1:namedElement"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAdminSavedSearchesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="search" type="ns1:namedValue"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAggregateQuotaUsageOnServerRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getAggregateQuotaUsageOnServerResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="domain" type="tns:domainAggregateQuotaInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllAccountLoggersRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllAccountLoggersResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="accountLogger" type="tns:accountLoggerInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="accountLoggerInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" name="logger" type="tns:loggerInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllAccountsRequest">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="server" type="tns:serverSelector"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="getAllAccountsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllAdminAccountsRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="applyCos" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllAdminAccountsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllCalendarResourcesRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:getAllAccountsRequest">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getAllCalendarResourcesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="calresource" type="tns:calendarResourceInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllConfigRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllConfigResponse">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getAllCosRequest">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllCosResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cos" type="tns:cosInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllDistributionListsRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAllDistributionListsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="dl" type="tns:distributionListInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllDomainsRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="applyConfig" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllDomainsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="domain" type="tns:domainInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllEffectiveRightsRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="grantee" type="tns:granteeSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="expandAllAttrs" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllEffectiveRightsResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="grantee" type="tns:granteeInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="target" type="tns:effectiveRightsTarget"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="effectiveRightsTarget">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="all" type="tns:effectiveRightsInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="inDomains" type="tns:inDomainInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entries" type="tns:rightsEntriesInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="ns1:targetType" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="effectiveRightsInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="right" type="tns:rightWithName"/>
            
      <xs:element name="setAttrs" type="tns:effectiveAttrsInfo"/>
            
      <xs:element name="getAttrs" type="tns:effectiveAttrsInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="rightWithName">
        
    <xs:sequence/>
        
    <xs:attribute name="n" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="effectiveAttrsInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="tns:effectiveAttrInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="all" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="effectiveAttrInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="constraint" type="tns:constraintInfo"/>
            
      <xs:element minOccurs="0" name="default">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="v" type="xs:string"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="n" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="constraintInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="min" type="xs:string"/>
            
      <xs:element minOccurs="0" name="max" type="xs:string"/>
            
      <xs:element minOccurs="0" name="values">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="v" type="xs:string"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="inDomainInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="domain" type="ns1:namedElement"/>
            
      <xs:element name="rights" type="tns:effectiveRightsInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="rightsEntriesInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="ns1:namedElement"/>
            
      <xs:element name="rights" type="tns:effectiveRightsInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getAllFreeBusyProvidersRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllFreeBusyProvidersResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="provider" type="tns:freeBusyProviderInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="freeBusyProviderInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="propagate" type="xs:boolean" use="required"/>
        
    <xs:attribute name="start" type="xs:long" use="required"/>
        
    <xs:attribute name="end" type="xs:long" use="required"/>
        
    <xs:attribute name="queue" type="xs:string" use="required"/>
        
    <xs:attribute name="prefix" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllLocalesRequest">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllLocalesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="locale" type="tns:localeInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="localeInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="localName" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllMailboxesRequest">
        
    <xs:all/>
        
    <xs:attribute name="limit" type="xs:long"/>
        
    <xs:attribute name="offset" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllMailboxesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="mbox" type="tns:mailboxInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean" use="required"/>
        
    <xs:attribute name="searchTotal" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxInfo">
        
    <xs:all/>
        
    <xs:attribute name="id" type="xs:int" use="required"/>
        
    <xs:attribute name="groupId" type="xs:int" use="required"/>
        
    <xs:attribute name="accountId" type="xs:string" use="required"/>
        
    <xs:attribute name="indexVolumeId" type="xs:short" use="required"/>
        
    <xs:attribute name="itemIdCheckPoint" type="xs:int" use="required"/>
        
    <xs:attribute name="contactCount" type="xs:int" use="required"/>
        
    <xs:attribute name="sizeCheckPoint" type="xs:long" use="required"/>
        
    <xs:attribute name="changeCheckPoint" type="xs:int" use="required"/>
        
    <xs:attribute name="trackingSync" type="xs:int" use="required"/>
        
    <xs:attribute name="trackingImap" type="xs:boolean" use="required"/>
        
    <xs:attribute name="lastbackupat" type="xs:int"/>
        
    <xs:attribute name="lastSoapAccess" type="xs:int" use="required"/>
        
    <xs:attribute name="newMessages" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllRightsRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="targetType" type="xs:string"/>
        
    <xs:attribute name="expandAllAttrs" type="xs:boolean"/>
        
    <xs:attribute name="rightClass" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllRightsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="right" type="tns:rightInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="rightInfo">
        
    <xs:sequence>
            
      <xs:element name="desc" type="xs:string"/>
            
      <xs:element minOccurs="0" name="attrs" type="tns:rightsAttrs"/>
            
      <xs:element minOccurs="0" name="rights" type="tns:comboRights"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="tns:rightType" use="required"/>
        
    <xs:attribute name="targetType" type="xs:string"/>
        
    <xs:attribute name="rightClass" type="tns:rightClass" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="rightsAttrs">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:a"/>
            
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
          
    </xs:sequence>
        
    <xs:attribute name="all" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="comboRights">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="r" type="tns:comboRightInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="comboRightInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="n" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="tns:rightType" use="required"/>
        
    <xs:attribute name="targetType" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllServersRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="service" type="xs:string"/>
        
    <xs:attribute name="applyConfig" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllServersResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:server"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllVolumesRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="getAllVolumesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" name="volume" type="tns:volumeInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllXMPPComponentsRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllXMPPComponentsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="xmppcomponent" type="tns:xmppComponentInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getAllZimletsRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="exclude" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAllZimletsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="zimlet" type="tns:zimletInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getApplianceHSMFSRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getApplianceHSMFSResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="fs" type="tns:hsmFileSystemInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="hsmFileSystemInfo">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="size" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="getAttributeInfoRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="attrs" type="xs:string"/>
        
    <xs:attribute name="entryTypes" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAttributeInfoResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="tns:attributeDescription"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="attributeDescription">
        
    <xs:sequence/>
        
    <xs:attribute name="n" type="xs:string" use="required"/>
        
    <xs:attribute name="desc" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getCSRRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="server" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getCSRResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="C" type="xs:string"/>
            
      <xs:element minOccurs="0" name="ST" type="xs:string"/>
            
      <xs:element minOccurs="0" name="L" type="xs:string"/>
            
      <xs:element minOccurs="0" name="O" type="xs:string"/>
            
      <xs:element minOccurs="0" name="OU" type="xs:string"/>
            
      <xs:element minOccurs="0" name="CN" type="xs:string"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="SubjectAltName" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="csr_exists" type="xs:string" use="required"/>
        
    <xs:attribute name="isComm" type="xs:string" use="required"/>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getCalendarResourceRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="calresource" type="tns:calendarResourceSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="applyCos" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="calendarResourceSelector">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="tns:calendarResourceBy"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="getCalendarResourceResponse">
        
    <xs:sequence>
            
      <xs:element name="calresource" type="tns:calendarResourceInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getCertRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
        
    <xs:attribute name="option" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getCertResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cert" type="tns:certInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="certInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="subject" type="xs:string"/>
            
      <xs:element minOccurs="0" name="issuer" type="xs:string"/>
            
      <xs:element minOccurs="0" name="notBefore" type="xs:string"/>
            
      <xs:element minOccurs="0" name="notAfter" type="xs:string"/>
            
      <xs:element minOccurs="0" name="SubjectAltName" type="xs:string"/>
            
      <xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="skip"/>
          
    </xs:sequence>
        
    <xs:attribute name="server" type="xs:string"/>
        
    <xs:attribute name="type" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getClusterStatusRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getClusterStatusResponse">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="clusterName" type="xs:string"/>
            
      <xs:element minOccurs="0" name="servers">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="server" type="tns:clusterServerInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element minOccurs="0" name="services">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="service" type="tns:clusterServiceInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="clusterServerInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="status" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="clusterServiceInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="state" type="xs:string" use="required"/>
        
    <xs:attribute name="owner" type="xs:string" use="required"/>
        
    <xs:attribute name="lastOwner" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getConfigRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" ref="tns:a"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getConfigResponse">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getCosRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getCosResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getCreateObjectAttrsRequest">
        
    <xs:sequence>
            
      <xs:element name="target" type="tns:targetWithType"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getCreateObjectAttrsResponse">
        
    <xs:sequence>
            
      <xs:element name="setAttrs" type="tns:effectiveAttrsInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getCurrentVolumesRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="getCurrentVolumesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="volume" type="tns:currentVolumeInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="currentVolumeInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:short" use="required"/>
        
    <xs:attribute name="type" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDataSourcesRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getDataSourcesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="dataSource" type="tns:dataSourceInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getDelegatedAdminConstraintsRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="ns1:namedElement"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="ns1:targetType" use="required"/>
        
    <xs:attribute name="id" type="xs:string"/>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDelegatedAdminConstraintsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="tns:constraintAttr"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="constraintAttr">
        
    <xs:sequence>
            
      <xs:element name="constraint" type="tns:constraintInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDistributionListMembershipRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="dl" type="tns:distributionListSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="limit" type="xs:int"/>
        
    <xs:attribute name="offset" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDistributionListMembershipResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="dl" type="tns:distributionListMembershipInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="distributionListMembershipInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="via" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDistributionListRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="dl" type="tns:distributionListSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="limit" type="xs:int"/>
                
        <xs:attribute name="offset" type="xs:int"/>
                
        <xs:attribute name="sortAscending" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getDistributionListResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="dl" type="tns:distributionListInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean"/>
        
    <xs:attribute name="total" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDomainCertRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="domain" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDomainCertResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cert" type="tns:certInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="domain" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDomainInfoRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="applyConfig" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getDomainInfoResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getDomainRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="applyConfig" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getDomainResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getEffectiveRightsRequest">
        
    <xs:sequence>
            
      <xs:element name="target" type="tns:effectiveRightsTargetSelector"/>
            
      <xs:element minOccurs="0" name="grantee" type="tns:granteeSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="expandAllAttrs" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getEffectiveRightsResponse">
        
    <xs:all>
            
      <xs:element name="grantee" type="tns:granteeInfo"/>
            
      <xs:element name="target" type="tns:effectiveRightsTargetInfo"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="effectiveRightsTargetInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:effectiveRightsInfo">
                
        <xs:sequence/>
                
        <xs:attribute name="type" type="ns1:targetType" use="required"/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getFilterRulesRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
            
      <xs:element minOccurs="0" name="server" type="tns:serverSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getFilterRulesResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
            
      <xs:element minOccurs="0" name="server" type="tns:serverSelector"/>
            
      <xs:element name="filterRules">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="filterRule" type="ns3:filterRule"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getFreeBusyQueueInfoRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="provider" type="ns1:namedElement"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getFreeBusyQueueInfoResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="provider" type="tns:freeBusyQueueProvider"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="freeBusyQueueProvider">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="ns1:id"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getGrantsRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="target" type="tns:effectiveRightsTargetSelector"/>
            
      <xs:element minOccurs="0" name="grantee" type="tns:granteeSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getGrantsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="grant" type="tns:grantInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="grantInfo">
        
    <xs:sequence>
            
      <xs:element name="target" type="tns:typeIdName"/>
            
      <xs:element name="grantee" type="tns:granteeInfo"/>
            
      <xs:element name="right" type="tns:rightModifierInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="typeIdName">
        
    <xs:sequence/>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="rightModifierInfo">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="deny" type="xs:boolean"/>
                
        <xs:attribute name="canDelegate" type="xs:boolean"/>
                
        <xs:attribute name="disinheritSubGroups" type="xs:boolean"/>
                
        <xs:attribute name="subDomain" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="getHsmStatusRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getHsmStatusResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="running" type="xs:boolean" use="required"/>
        
    <xs:attribute name="startDate" type="xs:long"/>
        
    <xs:attribute name="endDate" type="xs:long"/>
        
    <xs:attribute name="wasAborted" type="xs:boolean"/>
        
    <xs:attribute name="aborting" type="xs:boolean"/>
        
    <xs:attribute name="error" type="xs:string"/>
        
    <xs:attribute name="numBlobsMoved" type="xs:int"/>
        
    <xs:attribute name="numBytesMoved" type="xs:long"/>
        
    <xs:attribute name="numMailboxes" type="xs:int"/>
        
    <xs:attribute name="totalMailboxes" type="xs:int"/>
        
    <xs:attribute name="destVolumeId" type="xs:short"/>
        
    <xs:attribute name="query" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getIndexStatsRequest">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:mailboxByAccountIdSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getIndexStatsResponse">
        
    <xs:sequence>
            
      <xs:element name="stats" type="tns:indexStats"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="indexStats">
        
    <xs:all/>
        
    <xs:attribute name="maxDocs" type="xs:int" use="required"/>
        
    <xs:attribute name="deletedDocs" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getLoggerStatsRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="hostname" type="tns:hostName"/>
            
      <xs:element minOccurs="0" name="stats" type="tns:statsSpec"/>
            
      <xs:element minOccurs="0" name="startTime" type="tns:timeAttr"/>
            
      <xs:element minOccurs="0" name="endTime" type="tns:timeAttr"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="hostName">
        
    <xs:sequence/>
        
    <xs:attribute name="hn" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType mixed="true" name="statsSpec">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:values"/>
          
    </xs:sequence>
        
    <xs:attribute name="limit" type="xs:string"/>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="statsValueWrapper">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="stat" type="ns1:namedElement"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="timeAttr">
        
    <xs:sequence/>
        
    <xs:attribute name="time" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getLoggerStatsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="hostname" type="tns:hostStats"/>
            
      <xs:element minOccurs="0" name="note" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="hostStats">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="stats" type="tns:statsInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="hn" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="statsInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="values" type="tns:statsValues"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="statsValues">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="stat" type="tns:nameAndValue"/>
          
    </xs:sequence>
        
    <xs:attribute name="t" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="nameAndValue">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="value" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getMailQueueInfoRequest">
        
    <xs:sequence>
            
      <xs:element name="server" type="ns1:namedElement"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getMailQueueInfoResponse">
        
    <xs:sequence>
            
      <xs:element name="server" type="tns:serverQueues"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="serverQueues">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="queue" type="tns:mailQueueCount"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueCount">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="n" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getMailQueueRequest">
        
    <xs:sequence>
            
      <xs:element name="server" type="tns:serverMailQueueQuery"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="serverMailQueueQuery">
        
    <xs:sequence>
            
      <xs:element name="queue" type="tns:mailQueueQuery"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueQuery">
        
    <xs:sequence>
            
      <xs:element ref="tns:query"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="scan" type="xs:boolean"/>
        
    <xs:attribute name="wait" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="queueQuery">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="field" type="tns:queueQueryField"/>
          
    </xs:sequence>
        
    <xs:attribute name="offset" type="xs:int"/>
        
    <xs:attribute name="limit" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="queueQueryField">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="match" type="tns:valueAttrib"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="valueAttrib">
        
    <xs:sequence/>
        
    <xs:attribute name="value" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getMailQueueResponse">
        
    <xs:sequence>
            
      <xs:element name="server" type="tns:serverMailQueueDetails"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="serverMailQueueDetails">
        
    <xs:sequence>
            
      <xs:element name="queue" type="tns:mailQueueDetails"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueDetails">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="qs" type="tns:queueSummary"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="qi" type="tns:queueItem"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="time" type="xs:long" use="required"/>
        
    <xs:attribute name="scan" type="xs:boolean" use="required"/>
        
    <xs:attribute name="total" type="xs:int" use="required"/>
        
    <xs:attribute name="more" type="xs:boolean" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="queueSummary">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" name="qsi" type="tns:queueSummaryItem"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="queueSummaryItem">
        
    <xs:sequence/>
        
    <xs:attribute name="n" type="xs:int" use="required"/>
        
    <xs:attribute name="t" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="queueItem">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="time" type="xs:string" use="required"/>
        
    <xs:attribute name="fromdomain" type="xs:string" use="required"/>
        
    <xs:attribute name="size" type="xs:string" use="required"/>
        
    <xs:attribute name="from" type="xs:string" use="required"/>
        
    <xs:attribute name="to" type="xs:string" use="required"/>
        
    <xs:attribute name="host" type="xs:string" use="required"/>
        
    <xs:attribute name="addr" type="xs:string" use="required"/>
        
    <xs:attribute name="reason" type="xs:string" use="required"/>
        
    <xs:attribute name="filter" type="xs:string" use="required"/>
        
    <xs:attribute name="todomain" type="xs:string" use="required"/>
        
    <xs:attribute name="received" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="mbox" type="tns:mailboxByAccountIdSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxResponse">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:mailboxWithMailboxId"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxStatsRequest">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxStatsResponse">
        
    <xs:sequence>
            
      <xs:element name="stats" type="tns:mailboxStats"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxStats">
        
    <xs:all/>
        
    <xs:attribute name="numMboxes" type="xs:long" use="required"/>
        
    <xs:attribute name="totalSize" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxVersionRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:name"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxVersionResponse">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:mailboxVersionInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxVersionInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="mbxid" type="xs:int" use="required"/>
        
    <xs:attribute name="majorVer" type="xs:short" use="required"/>
        
    <xs:attribute name="minorVer" type="xs:short" use="required"/>
        
    <xs:attribute name="dbVer" type="xs:int" use="required"/>
        
    <xs:attribute name="indexVer" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxVolumesRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:name"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getMailboxVolumesResponse">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:mailboxVolumesInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxVolumesInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="volume" type="tns:mailboxVolumeInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="mbxid" type="xs:int" use="required"/>
        
    <xs:attribute name="token" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxVolumeInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:short" use="required"/>
        
    <xs:attribute name="type" type="xs:short" use="required"/>
        
    <xs:attribute name="rootpath" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getMemcachedClientConfigRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getMemcachedClientConfigResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="serverList" type="xs:string"/>
        
    <xs:attribute name="hashAlgorithm" type="xs:string"/>
        
    <xs:attribute name="binaryProtocol" type="xs:boolean"/>
        
    <xs:attribute name="defaultExpirySeconds" type="xs:int"/>
        
    <xs:attribute name="defaultTimeoutMillis" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="getOutgoingFilterRulesRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:getFilterRulesRequest">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="getOutgoingFilterRulesResponse">
        
    <xs:complexContent>
            
      <xs:extension base="tns:getFilterRulesResponse">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getQuotaUsageRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="domain" type="xs:string"/>
        
    <xs:attribute name="allServers" type="xs:boolean"/>
        
    <xs:attribute name="limit" type="xs:int"/>
        
    <xs:attribute name="offset" type="xs:int"/>
        
    <xs:attribute name="sortBy" type="xs:string"/>
        
    <xs:attribute name="sortAscending" type="xs:boolean"/>
        
    <xs:attribute name="refresh" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getQuotaUsageResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:accountQuotaInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean" use="required"/>
        
    <xs:attribute name="searchTotal" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="accountQuotaInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="used" type="xs:long" use="required"/>
        
    <xs:attribute name="limit" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getRightRequest">
        
    <xs:sequence>
            
      <xs:element name="right" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="expandAllAttrs" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getRightResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="right" type="tns:rightInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getRightsDocRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="package" type="tns:packageSelector"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="packageSelector">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getRightsDocResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="package" type="tns:packageRightsInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="notUsed" type="xs:string"/>
            
      <xs:element name="domainAdmin-copypaste-to-rights-domainadmin-xml-template">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="right" type="tns:domainAdminRight"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="packageRightsInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cmd" type="tns:cmdRightsInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="cmdRightsInfo">
        
    <xs:sequence>
            
      <xs:element name="rights">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="right" type="ns1:namedElement"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element name="desc">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="note" type="xs:string"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="domainAdminRight">
        
    <xs:sequence>
            
      <xs:element name="desc" type="xs:string"/>
            
      <xs:element name="rights">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="r" type="tns:rightWithName"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="tns:rightType" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getSMIMEConfigRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="config" type="ns1:namedElement"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getSMIMEConfigResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="config" type="tns:smimeConfigInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="smimeConfigInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getServerNIfsRequest">
        
    <xs:sequence>
            
      <xs:element name="server" type="tns:serverSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getServerNIfsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ni" type="tns:networkInformation"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="networkInformation">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getServerRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="server" type="tns:serverSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="applyConfig" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getServerResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" ref="tns:server"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getServerStatsRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="stat" type="tns:stat"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="stat">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="name" type="xs:string"/>
                
        <xs:attribute name="description" type="xs:string"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="getServerStatsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="stat" type="tns:stat"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getServiceStatusRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="carbonioServicesOnly" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getServiceStatusResponse">
        
    <xs:sequence>
            
      <xs:element name="timezone" type="tns:timeZoneInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="status" type="tns:serviceStatus"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="timeZoneInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="displayName" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="serviceStatus">
        
    <xs:simpleContent>
            
      <xs:extension base="ns1:zeroOrOne">
                
        <xs:attribute name="server" type="xs:string" use="required"/>
                
        <xs:attribute name="service" type="xs:string" use="required"/>
                
        <xs:attribute name="t" type="xs:long" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="getSessionsRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
        
    <xs:attribute name="sortBy" type="tns:getSessionsSortBy"/>
        
    <xs:attribute name="offset" type="xs:long"/>
        
    <xs:attribute name="limit" type="xs:long"/>
        
    <xs:attribute name="refresh" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="getSessionsResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="s" type="tns:simpleSessionInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean" use="required"/>
        
    <xs:attribute name="total" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="simpleSessionInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="zid" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="sid" type="xs:string" use="required"/>
        
    <xs:attribute name="cd" type="xs:long" use="required"/>
        
    <xs:attribute name="ld" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getShareInfoRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="grantee" type="ns1:granteeChooser"/>
            
      <xs:element name="owner" type="ns1:accountSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getShareInfoResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="share" type="ns1:shareInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getSystemRetentionPolicyRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getSystemRetentionPolicyResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" ref="ns3:retentionPolicy"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getVersionInfoRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getVersionInfoResponse">
        
    <xs:sequence>
            
      <xs:element name="info" type="tns:versionInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="versionInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="type" type="xs:string"/>
        
    <xs:attribute name="version" type="xs:string" use="required"/>
        
    <xs:attribute name="release" type="xs:string" use="required"/>
        
    <xs:attribute name="buildDate" type="xs:string" use="required"/>
        
    <xs:attribute name="host" type="xs:string" use="required"/>
        
    <xs:attribute name="majorversion" type="xs:string" use="required"/>
        
    <xs:attribute name="minorversion" type="xs:string" use="required"/>
        
    <xs:attribute name="microversion" type="xs:string" use="required"/>
        
    <xs:attribute name="platform" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="getVolumeRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="getVolumeResponse">
        
    <xs:sequence>
            
      <xs:element name="volume" type="tns:volumeInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getXMPPComponentRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element name="xmppcomponent" type="tns:xmppComponentSelector"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getXMPPComponentResponse">
        
    <xs:sequence>
            
      <xs:element name="xmppcomponent" type="tns:xmppComponentInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getXMbxSearchesListRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getXMbxSearchesListResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="searchtask" type="tns:searchNode"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="getZimletRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element name="zimlet" type="ns1:namedElement"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="getZimletResponse">
        
    <xs:sequence>
            
      <xs:element name="zimlet" type="tns:zimletInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="getZimletStatusRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="getZimletStatusResponse">
        
    <xs:sequence>
            
      <xs:element name="zimlets" type="tns:zimletStatusParent"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cos" type="tns:zimletStatusCos"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="zimletStatusParent">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="zimlet" type="tns:zimletStatus"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="zimletStatus">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="status" type="tns:zimletStatusSetting" use="required"/>
        
    <xs:attribute name="extension" type="xs:boolean" use="required"/>
        
    <xs:attribute name="priority" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="zimletStatusCos">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="zimlet" type="tns:zimletStatus"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="grantRightRequest">
        
    <xs:sequence>
            
      <xs:element name="target" type="tns:effectiveRightsTargetSelector"/>
            
      <xs:element name="grantee" type="tns:granteeSelector"/>
            
      <xs:element name="right" type="tns:rightModifierInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="grantRightResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="habOrgUnitRequest">
        
    <xs:sequence>
            
      <xs:element name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="op" type="tns:habOp" use="required"/>
        
    <xs:attribute name="newName" type="xs:string"/>
        
    <xs:attribute name="forceDelete" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="habOrgUnitResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="habOrgUnitName" type="xs:string"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="hsmRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="hsmResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="installCertRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="comm_cert" type="tns:commCert"/>
            
      <xs:element minOccurs="0" name="validation_days" type="xs:string"/>
            
      <xs:element minOccurs="0" name="digest" type="xs:string"/>
            
      <xs:element minOccurs="0" name="subject" type="tns:csrSubject"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="SubjectAltName" type="xs:string"/>
            
      <xs:element minOccurs="0" name="keysize" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
        
    <xs:attribute name="skipCleanup" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="commCert">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cert" type="tns:aidAndFilename"/>
            
      <xs:element minOccurs="0" name="rootCA" type="tns:aidAndFilename"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="intermediateCA" type="tns:aidAndFilename"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="aidAndFilename">
        
    <xs:sequence/>
        
    <xs:attribute name="aid" type="xs:string"/>
        
    <xs:attribute name="filename" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="csrSubject">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="C" type="xs:string"/>
            
      <xs:element minOccurs="0" name="ST" type="xs:string"/>
            
      <xs:element minOccurs="0" name="L" type="xs:string"/>
            
      <xs:element minOccurs="0" name="O" type="xs:string"/>
            
      <xs:element minOccurs="0" name="OU" type="xs:string"/>
            
      <xs:element minOccurs="0" name="CN" type="xs:string"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="installCertResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="issueCertRequest">
        
    <xs:all/>
        
    <xs:attribute name="domain" type="xs:string" use="required"/>
        
    <xs:attribute name="chainType" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="issueCertResponse">
        
    <xs:sequence>
            
      <xs:element name="message" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="domain" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="lockoutMailboxRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="ns1:accountNameSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="op" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="lockoutMailboxResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueActionRequest">
        
    <xs:sequence>
            
      <xs:element name="server" type="tns:serverWithQueueAction"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="serverWithQueueAction">
        
    <xs:sequence>
            
      <xs:element name="queue" type="tns:mailQueueWithAction"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueWithAction">
        
    <xs:sequence>
            
      <xs:element name="action" type="tns:mailQueueAction"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType mixed="true" name="mailQueueAction">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:query"/>
          
    </xs:sequence>
        
    <xs:attribute name="op" type="tns:queueAction" use="required"/>
        
    <xs:attribute name="by" type="tns:queueActionBy" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueActionResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueFlushRequest">
        
    <xs:sequence>
            
      <xs:element name="server" type="ns1:namedElement"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="mailQueueFlushResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="migrateAccountRequest">
        
    <xs:sequence>
            
      <xs:element name="migrate" type="tns:idAndAction"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="idAndAction">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="action" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="migrateAccountResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyAccountRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:all/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyAccountResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifyAddressListRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="name" type="xs:string"/>
            
      <xs:element minOccurs="0" name="desc" type="xs:string"/>
            
      <xs:element minOccurs="0" name="searchFilter" type="tns:entrySearchFilterInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="ns1:galSearchType"/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="clearFilter" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyAddressListResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyAdminSavedSearchesRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="search" type="ns1:namedValue"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="modifyAdminSavedSearchesResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyCalendarResourceRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyCalendarResourceResponse">
        
    <xs:sequence>
            
      <xs:element name="calresource" type="tns:calendarResourceInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifyConfigRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyConfigResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyCosRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="id" type="xs:string"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyCosResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDataSourceRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence>
                    
          <xs:element name="dataSource" type="tns:dataSourceInfo"/>
                  
        </xs:sequence>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDataSourceResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDelegatedAdminConstraintsRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="a" type="tns:constraintAttr"/>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="ns1:targetType" use="required"/>
        
    <xs:attribute name="id" type="xs:string"/>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDelegatedAdminConstraintsResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDistributionListRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDistributionListResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="dl" type="tns:distributionListInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDomainRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:all/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyDomainResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifyHABGroupRequest">
        
    <xs:sequence>
            
      <xs:element name="habGroupOperation" type="tns:habGroupOperation"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="habGroupOperation">
        
    <xs:sequence/>
        
    <xs:attribute name="habGroupId" type="xs:string" use="required"/>
        
    <xs:attribute name="currentParentHabGroupId" type="xs:string"/>
        
    <xs:attribute name="targetParentHabGroupId" type="xs:string"/>
        
    <xs:attribute name="seniorityIndex" type="xs:int"/>
        
    <xs:attribute name="op" type="tns:habGroupOp" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyHABGroupResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="members">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="member" type="xs:string"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifyFilterRulesRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
            
      <xs:element minOccurs="0" name="server" type="tns:serverSelector"/>
            
      <xs:element name="filterRules">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="filterRule" type="ns3:filterRule"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyFilterRulesResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="modifyOutgoingFilterRulesRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:modifyFilterRulesRequest">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyOutgoingFilterRulesResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifySMIMEConfigRequest">
        
    <xs:sequence>
            
      <xs:element name="config" type="tns:smimeConfigModifications"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="smimeConfigModifications">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="op" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifySMIMEConfigResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyServerRequest">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminAttrsImpl">
                
        <xs:all/>
                
        <xs:attribute name="id" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="modifyServerResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" ref="tns:server"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifySystemRetentionPolicyRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="cos" type="tns:cosSelector"/>
            
      <xs:element ref="ns3:policy"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifySystemRetentionPolicyResponse">
        
    <xs:sequence>
            
      <xs:element ref="ns3:policy"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="modifyVolumeRequest">
        
    <xs:sequence>
            
      <xs:element name="volume" type="tns:volumeInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyVolumeResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyZimletRequest">
        
    <xs:sequence>
            
      <xs:element name="zimlet" type="tns:zimletAclStatusPri"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="zimletAclStatusPri">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="acl" type="tns:zimletAcl"/>
            
      <xs:element minOccurs="0" name="status" type="tns:valueAttrib"/>
            
      <xs:element minOccurs="0" name="priority" type="tns:integerValueAttrib"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="zimletAcl">
        
    <xs:sequence/>
        
    <xs:attribute name="cos" type="xs:string"/>
        
    <xs:attribute name="acl" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="integerValueAttrib">
        
    <xs:sequence/>
        
    <xs:attribute name="value" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="modifyZimletResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="moveBlobsRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="query" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="types" type="xs:string" use="required"/>
        
    <xs:attribute name="sourceVolumeIds" type="xs:string" use="required"/>
        
    <xs:attribute name="destVolumeId" type="xs:short" use="required"/>
        
    <xs:attribute name="maxBytes" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="moveBlobsResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="numBlobsMoved" type="xs:int"/>
        
    <xs:attribute name="numBytesMoved" type="xs:long"/>
        
    <xs:attribute name="totalMailboxes" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="moveMailboxRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:moveMailboxInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="moveMailboxInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="dest" type="xs:string" use="required"/>
        
    <xs:attribute name="src" type="xs:string" use="required"/>
        
    <xs:attribute name="blobs" type="xs:string"/>
        
    <xs:attribute name="secondaryBlobs" type="xs:string"/>
        
    <xs:attribute name="searchIndex" type="xs:string"/>
        
    <xs:attribute name="maxSyncs" type="xs:int"/>
        
    <xs:attribute name="syncFinishThreshold" type="xs:long"/>
        
    <xs:attribute name="sync" type="xs:boolean"/>
        
    <xs:attribute name="skipRemoteLockout" type="xs:boolean"/>
        
    <xs:attribute name="skipMemcachePurge" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="moveMailboxResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="noOpRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="noOpResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="pingRequest">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="pingResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="purgeAccountCalendarCacheRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="purgeAccountCalendarCacheResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="purgeFreeBusyQueueRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="provider" type="ns1:namedElement"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="purgeFreeBusyQueueResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="purgeMessagesRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="mbox" type="tns:mailboxByAccountIdSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="purgeMessagesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="mbox" type="tns:mailboxWithMailboxId"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="purgeMovedMailboxRequest">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:name"/>
          
    </xs:sequence>
        
    <xs:attribute name="forceDeleteBlobs" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="purgeMovedMailboxResponse">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:purgeMovedMailboxInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="purgeMovedMailboxInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="server" type="xs:string" use="required"/>
        
    <xs:attribute name="mbxid" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="pushFreeBusyRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:names"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="ns1:id"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="names">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="pushFreeBusyResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="queryMailboxMoveRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:name"/>
          
    </xs:sequence>
        
    <xs:attribute name="checkPeer" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="queryMailboxMoveResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:mailboxMoveInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="mailboxMoveInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="start" type="xs:long" use="required"/>
        
    <xs:attribute name="type" type="ns1:mailboxMoveType" use="required"/>
        
    <xs:attribute name="src" type="xs:string" use="required"/>
        
    <xs:attribute name="dest" type="xs:string" use="required"/>
        
    <xs:attribute name="noPeer" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="queryWaitSetRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="waitSet" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="queryWaitSetResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="waitSet" type="tns:waitSetInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="waitSetInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="session" type="tns:sessionForWaitSet"/>
            
      <xs:element minOccurs="0" name="errors">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="error" type="ns1:idAndType"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
            
      <xs:element minOccurs="0" name="ready" type="tns:accountsAttrib"/>
            
      <xs:element minOccurs="0" name="buffered">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="commit" type="tns:bufferedCommitInfo"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="owner" type="xs:string" use="required"/>
        
    <xs:attribute name="defTypes" type="xs:string" use="required"/>
        
    <xs:attribute name="ld" type="xs:long" use="required"/>
        
    <xs:attribute name="cbSeqNo" type="xs:string"/>
        
    <xs:attribute name="currentSeqNo" type="xs:string"/>
        
    <xs:attribute name="nextSeqNo" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="sessionForWaitSet">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="WaitSetSession" type="tns:waitSetSessionInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="account" type="xs:string" use="required"/>
        
    <xs:attribute name="types" type="xs:string" use="required"/>
        
    <xs:attribute name="token" type="xs:string"/>
        
    <xs:attribute name="mboxSyncToken" type="xs:int"/>
        
    <xs:attribute name="mboxSyncTokenDiff" type="xs:int"/>
        
    <xs:attribute name="acctIdError" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="waitSetSessionInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="interestMask" type="xs:string" use="required"/>
        
    <xs:attribute name="highestChangeId" type="xs:int" use="required"/>
        
    <xs:attribute name="lastAccessTime" type="xs:long" use="required"/>
        
    <xs:attribute name="creationTime" type="xs:long" use="required"/>
        
    <xs:attribute name="sessionId" type="xs:string" use="required"/>
        
    <xs:attribute name="token" type="xs:string"/>
        
    <xs:attribute name="changedFolders" type="xs:string"/>
        
    <xs:attribute name="folderInterests" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="accountsAttrib">
        
    <xs:sequence/>
        
    <xs:attribute name="accounts" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="bufferedCommitInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="aid" type="xs:string" use="required"/>
        
    <xs:attribute name="cid" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="reIndexRequest">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:reindexMailboxInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="action" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="reindexMailboxInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="types" type="xs:string"/>
        
    <xs:attribute name="ids" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="reIndexResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="progress" type="tns:reindexProgressInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="status" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="reindexProgressInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="numSucceeded" type="xs:int" use="required"/>
        
    <xs:attribute name="numFailed" type="xs:int" use="required"/>
        
    <xs:attribute name="numRemaining" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="recalculateMailboxCountsRequest">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:mailboxByAccountIdSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="recalculateMailboxCountsResponse">
        
    <xs:sequence>
            
      <xs:element ref="tns:mbox"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxQuotaInfo">
        
    <xs:all/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="used" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="refreshRegisteredAuthTokensRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" name="token" type="xs:string"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="refreshRegisteredAuthTokensResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="registerMailboxMoveOutRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:mailboxMoveSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="mailboxMoveSpec">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="dest" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="registerMailboxMoveOutResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="reloadAccountRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:name"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="reloadAccountResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="reloadLocalConfigRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="reloadLocalConfigResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="reloadMemcachedClientConfigRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="reloadMemcachedClientConfigResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="removeAccountAliasRequest">
        
    <xs:all/>
        
    <xs:attribute name="id" type="xs:string"/>
        
    <xs:attribute name="alias" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="removeAccountAliasResponse">
        
    <xs:all/>
      
  </xs:complexType>
    
  <xs:complexType name="removeAccountLoggerRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="id" type="xs:string"/>
            
      <xs:element minOccurs="0" name="account" type="ns1:accountSelector"/>
            
      <xs:element minOccurs="0" name="logger" type="tns:loggerInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="removeAccountLoggerResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="removeDistributionListAliasRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="alias" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="removeDistributionListAliasResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="removeDistributionListMemberRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" name="dlm" type="xs:string"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="removeDistributionListMemberResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="renameAccountRequest">
        
    <xs:all/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="newName" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="renameAccountResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="changePrimaryEmailRequest">
        
    <xs:all>
            
      <xs:element name="account" type="ns1:accountSelector"/>
            
      <xs:element name="newName" type="xs:string"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="changePrimaryEmailResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="account" type="tns:accountInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="renameCalendarResourceRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="newName" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="renameCalendarResourceResponse">
        
    <xs:sequence>
            
      <xs:element name="calresource" type="tns:calendarResourceInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="renameCosRequest">
        
    <xs:all>
            
      <xs:element name="id" type="xs:string"/>
            
      <xs:element name="newName" type="xs:string"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="renameCosResponse">
        
    <xs:sequence>
            
      <xs:element name="cos" type="tns:cosInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="renameDistributionListRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="newName" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="renameDistributionListResponse">
        
    <xs:sequence>
            
      <xs:element name="dl" type="tns:distributionListInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="resetAllLoggersRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="resetAllLoggersResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="restoreRequest">
        
    <xs:sequence>
            
      <xs:element name="restore" type="tns:restoreSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="restoreSpec">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="fileCopier" type="tns:fileCopierSpec"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:name"/>
          
    </xs:sequence>
        
    <xs:attribute name="method" type="xs:string"/>
        
    <xs:attribute name="searchIndex" type="xs:string"/>
        
    <xs:attribute name="blobs" type="xs:string"/>
        
    <xs:attribute name="secondaryBlobs" type="xs:string"/>
        
    <xs:attribute name="target" type="xs:string"/>
        
    <xs:attribute name="label" type="xs:string"/>
        
    <xs:attribute name="sysData" type="xs:boolean"/>
        
    <xs:attribute name="includeIncrementals" type="xs:boolean"/>
        
    <xs:attribute name="replayRedo" type="xs:boolean"/>
        
    <xs:attribute name="continue" type="xs:boolean"/>
        
    <xs:attribute name="prefix" type="xs:string"/>
        
    <xs:attribute name="restoreToTime" type="xs:long"/>
        
    <xs:attribute name="restoreToRedoSeq" type="xs:long"/>
        
    <xs:attribute name="restoreToIncrLabel" type="xs:string"/>
        
    <xs:attribute name="ignoreRedoErrors" type="xs:boolean"/>
        
    <xs:attribute name="skipDeleteOps" type="xs:boolean"/>
        
    <xs:attribute name="skipDeletedAccounts" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="restoreResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:name"/>
          
    </xs:sequence>
        
    <xs:attribute name="status" type="xs:string"/>
        
    <xs:attribute name="rebuiltSchema" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="revokeRightRequest">
        
    <xs:sequence>
            
      <xs:element name="target" type="tns:effectiveRightsTargetSelector"/>
            
      <xs:element name="grantee" type="tns:granteeSelector"/>
            
      <xs:element name="right" type="tns:rightModifierInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="revokeRightResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="rolloverRedoLogRequest">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="rolloverRedoLogResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="runUnitTestsRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="test" type="xs:string"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="runUnitTestsResponse">
        
    <xs:sequence>
            
      <xs:element name="results" type="tns:testResultInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="numExecuted" type="xs:int" use="required"/>
        
    <xs:attribute name="numFailed" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="testResultInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="completed" type="tns:completedTestInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="failure" type="tns:failedTestInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="completedTestInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="execSeconds" type="xs:string" use="required"/>
        
    <xs:attribute name="class" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="failedTestInfo">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="name" type="xs:string" use="required"/>
                
        <xs:attribute name="execSeconds" type="xs:string" use="required"/>
                
        <xs:attribute name="class" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="scheduleBackupsRequest">
        
    <xs:sequence>
            
      <xs:element name="server" type="tns:name"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="scheduleBackupsResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="searchAccountsRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="query" type="xs:string" use="required"/>
        
    <xs:attribute name="limit" type="xs:int"/>
        
    <xs:attribute name="offset" type="xs:int"/>
        
    <xs:attribute name="domain" type="xs:string"/>
        
    <xs:attribute name="applyCos" type="xs:boolean"/>
        
    <xs:attribute name="attrs" type="xs:string"/>
        
    <xs:attribute name="sortBy" type="xs:string"/>
        
    <xs:attribute name="types" type="xs:string"/>
        
    <xs:attribute name="sortAscending" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="searchAccountsResponse">
        
    <xs:sequence>
            
      <xs:choice maxOccurs="unbounded" minOccurs="0">
                
        <xs:element name="calresource" type="tns:calendarResourceInfo"/>
                
        <xs:element name="dl" type="tns:distributionListInfo"/>
                
        <xs:element name="alias" type="tns:aliasInfo"/>
                
        <xs:element name="account" type="tns:accountInfo"/>
                
        <xs:element name="domain" type="tns:domainInfo"/>
                
        <xs:element name="cos" type="tns:cosInfo"/>
              
      </xs:choice>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean" use="required"/>
        
    <xs:attribute name="searchTotal" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="aliasInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminObjectInfo">
                
        <xs:sequence/>
                
        <xs:attribute name="targetName" type="xs:string" use="required"/>
                
        <xs:attribute name="type" type="ns1:targetType"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="searchAutoProvDirectoryRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element name="domain" type="tns:domainSelector"/>
                  
        </xs:sequence>
                
        <xs:attribute name="keyAttr" type="xs:string" use="required"/>
                
        <xs:attribute name="query" type="xs:string"/>
                
        <xs:attribute name="name" type="xs:string"/>
                
        <xs:attribute name="maxResults" type="xs:int"/>
                
        <xs:attribute name="limit" type="xs:int"/>
                
        <xs:attribute name="offset" type="xs:int"/>
                
        <xs:attribute name="refresh" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="searchAutoProvDirectoryResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:autoProvDirectoryEntry"/>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean" use="required"/>
        
    <xs:attribute name="searchTotal" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="autoProvDirectoryEntry">
        
    <xs:complexContent>
            
      <xs:extension base="tns:adminKeyValuePairs">
                
        <xs:sequence>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="key" type="xs:string"/>
                  
        </xs:sequence>
                
        <xs:attribute name="dn" type="xs:string" use="required"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="searchCalendarResourcesRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="searchFilter" type="tns:entrySearchFilterInfo"/>
                  
        </xs:sequence>
                
        <xs:attribute name="limit" type="xs:int"/>
                
        <xs:attribute name="offset" type="xs:int"/>
                
        <xs:attribute name="domain" type="xs:string"/>
                
        <xs:attribute name="applyCos" type="xs:boolean"/>
                
        <xs:attribute name="sortBy" type="xs:string"/>
                
        <xs:attribute name="sortAscending" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="searchCalendarResourcesResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="calresource" type="tns:calendarResourceInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="more" type="xs:boolean" use="required"/>
        
    <xs:attribute name="searchTotal" type="xs:long" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="searchDirectoryRequest">
        
    <xs:complexContent>
            
      <xs:extension base="ns1:attributeSelectorImpl">
                
        <xs:sequence/>
                
        <xs:attribute name="query" type="xs:string"/>
                
        <xs:attribute name="maxResults" type="xs:int"/>
                
        <xs:attribute name="limit" type="xs:int"/>
                
        <xs:attribute name="offset" type="xs:int"/>
                
        <xs:attribute name="domain" type="xs:string"/>
                
        <xs:attribute name="applyCos" type="xs:boolean"/>
                
        <xs:attribute name="applyConfig" type="xs:boolean"/>
                
        <xs:attribute name="sortBy" type="xs:string"/>
                
        <xs:attribute name="types" type="xs:string"/>
                
        <xs:attribute name="sortAscending" type="xs:boolean"/>
                
        <xs:attribute name="countOnly" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="searchDirectoryResponse">
        
    <xs:sequence>
            
      <xs:choice maxOccurs="unbounded" minOccurs="0">
                
        <xs:element name="calresource" type="tns:calendarResourceInfo"/>
                
        <xs:element name="dl" type="tns:distributionListInfo"/>
                
        <xs:element name="alias" type="tns:aliasInfo"/>
                
        <xs:element name="account" type="tns:accountInfo"/>
                
        <xs:element name="domain" type="tns:domainInfo"/>
                
        <xs:element name="cos" type="tns:cosInfo"/>
              
      </xs:choice>
          
    </xs:sequence>
        
    <xs:attribute name="num" type="xs:long"/>
        
    <xs:attribute name="more" type="xs:boolean"/>
        
    <xs:attribute name="searchTotal" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="searchGalRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="domain" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="limit" type="xs:int"/>
        
    <xs:attribute name="type" type="ns1:galSearchType"/>
        
    <xs:attribute name="galAcctId" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="searchGalResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="cn" type="tns:contactInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="sortBy" type="xs:string"/>
        
    <xs:attribute name="offset" type="xs:int"/>
        
    <xs:attribute name="more" type="xs:boolean"/>
        
    <xs:attribute name="tokenizeKey" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="searchMultiMailboxRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="header" type="ns1:attributeName"/>
            
      <xs:element minOccurs="0" name="tz" type="tns:calTZInfo"/>
            
      <xs:element minOccurs="0" name="locale" type="xs:string"/>
            
      <xs:element minOccurs="0" name="cursor" type="ns1:cursorInfo"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="mbx" type="tns:nameOrId"/>
          
    </xs:sequence>
        
    <xs:attribute name="includeTagDeleted" type="xs:boolean"/>
        
    <xs:attribute name="includeTagMuted" type="xs:boolean"/>
        
    <xs:attribute name="calExpandInstStart" type="xs:long"/>
        
    <xs:attribute name="calExpandInstEnd" type="xs:long"/>
        
    <xs:attribute name="query" type="xs:string"/>
        
    <xs:attribute name="inDumpster" type="xs:boolean"/>
        
    <xs:attribute name="types" type="xs:string"/>
        
    <xs:attribute name="groupBy" type="xs:string"/>
        
    <xs:attribute name="quick" type="xs:boolean"/>
        
    <xs:attribute name="sortBy" type="xs:string"/>
        
    <xs:attribute name="fetch" type="xs:string"/>
        
    <xs:attribute name="read" type="xs:boolean"/>
        
    <xs:attribute name="max" type="xs:int"/>
        
    <xs:attribute name="html" type="xs:boolean"/>
        
    <xs:attribute name="neuter" type="xs:boolean"/>
        
    <xs:attribute name="recip" type="ns1:wantRecipsSetting"/>
        
    <xs:attribute name="prefetch" type="xs:boolean"/>
        
    <xs:attribute name="resultMode" type="xs:string"/>
        
    <xs:attribute name="field" type="xs:string"/>
        
    <xs:attribute name="limit" type="xs:int"/>
        
    <xs:attribute name="offset" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="nameOrId">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="id" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="searchMultiMailboxResponse">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="m" type="tns:messageInfo"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="messageInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:messageCommon">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="fr" type="xs:string"/>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="e" type="tns:emailInfo"/>
                    
          <xs:element minOccurs="0" name="su" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="mid" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="irt" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="inv" type="tns:inviteInfo"/>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="header" type="ns1:keyValuePair"/>
                    
          <xs:choice maxOccurs="unbounded" minOccurs="0">
                        
            <xs:element name="mp" type="tns:partInfo"/>
                        
            <xs:element name="shr" type="tns:shareNotification"/>
                        
            <xs:element name="dlSubs" type="tns:dlSubscriptionNotification"/>
                      
          </xs:choice>
                  
        </xs:sequence>
                
        <xs:attribute name="id" type="xs:string"/>
                
        <xs:attribute name="cif" type="xs:string"/>
                
        <xs:attribute name="origid" type="xs:string"/>
                
        <xs:attribute name="rt" type="xs:string"/>
                
        <xs:attribute name="idnt" type="xs:string"/>
                
        <xs:attribute name="forAcct" type="xs:string"/>
                
        <xs:attribute name="autoSendTime" type="xs:long"/>
                
        <xs:attribute name="sd" type="xs:long"/>
                
        <xs:attribute name="rd" type="xs:long"/>
                
        <xs:attribute name="part" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="messageCommon">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" ref="tns:meta"/>
          
    </xs:sequence>
        
    <xs:attribute name="s" type="xs:long"/>
        
    <xs:attribute name="d" type="xs:long"/>
        
    <xs:attribute name="l" type="xs:string"/>
        
    <xs:attribute name="cid" type="xs:string"/>
        
    <xs:attribute name="f" type="xs:string"/>
        
    <xs:attribute name="t" type="xs:string"/>
        
    <xs:attribute name="tn" type="xs:string"/>
        
    <xs:attribute name="rev" type="xs:int"/>
        
    <xs:attribute name="md" type="xs:long"/>
        
    <xs:attribute name="ms" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="emailInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="a" type="xs:string" use="required"/>
        
    <xs:attribute name="d" type="xs:string" use="required"/>
        
    <xs:attribute name="p" type="xs:string" use="required"/>
        
    <xs:attribute name="t" type="xs:string" use="required"/>
        
    <xs:attribute name="isGroup" type="xs:boolean"/>
        
    <xs:attribute name="exp" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="inviteInfo">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="tz" type="tns:calTZInfo"/>
            
      <xs:element minOccurs="0" name="comp" type="tns:inviteComponent"/>
            
      <xs:element minOccurs="0" name="replies">
                
        <xs:complexType>
                    
          <xs:sequence>
                        
            <xs:element maxOccurs="unbounded" minOccurs="0" name="reply" type="tns:calendarReply"/>
                      
          </xs:sequence>
                  
          <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
        </xs:complexType>
              
      </xs:element>
          
    </xs:sequence>
        
    <xs:attribute name="type" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="inviteComponent">
        
    <xs:complexContent>
            
      <xs:extension base="tns:inviteComponentCommon">
                
        <xs:sequence>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="category" type="xs:string"/>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="comment" type="xs:string"/>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="contact" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="geo" type="tns:geoInfo"/>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="at" type="tns:calendarAttendee"/>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="alarm" type="tns:alarmInfo"/>
                    
          <xs:element maxOccurs="unbounded" minOccurs="0" name="xprop" type="tns:xProp"/>
                    
          <xs:element minOccurs="0" name="fr" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="descHtml" type="xs:string"/>
                    
          <xs:element minOccurs="0" name="or" type="tns:calOrganizer"/>
                    
          <xs:element minOccurs="0" name="recur" type="tns:recurrenceInfo"/>
                    
          <xs:element minOccurs="0" name="exceptId" type="tns:exceptionRecurIdInfo"/>
                    
          <xs:element minOccurs="0" name="s" type="tns:dtTimeInfo"/>
                    
          <xs:element minOccurs="0" name="e" type="tns:dtTimeInfo"/>
                    
          <xs:element minOccurs="0" name="dur" type="tns:durationInfo"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="inviteComponentCommon">
        
    <xs:sequence/>
        
    <xs:attribute name="method" type="xs:string" use="required"/>
        
    <xs:attribute name="compNum" type="xs:int" use="required"/>
        
    <xs:attribute name="rsvp" type="xs:boolean" use="required"/>
        
    <xs:attribute name="priority" type="xs:string"/>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="loc" type="xs:string"/>
        
    <xs:attribute name="noBlob" type="xs:boolean"/>
        
    <xs:attribute name="fba" type="xs:string"/>
        
    <xs:attribute name="fb" type="xs:string"/>
        
    <xs:attribute name="transp" type="xs:string"/>
        
    <xs:attribute name="isOrg" type="xs:boolean"/>
        
    <xs:attribute name="x_uid" type="xs:string"/>
        
    <xs:attribute name="uid" type="xs:string"/>
        
    <xs:attribute name="seq" type="xs:int"/>
        
    <xs:attribute name="d" type="xs:long"/>
        
    <xs:attribute name="calItemId" type="xs:string"/>
        
    <xs:attribute name="apptId" type="xs:string"/>
        
    <xs:attribute name="ciFolder" type="xs:string"/>
        
    <xs:attribute name="status" type="xs:string"/>
        
    <xs:attribute name="class" type="xs:string"/>
        
    <xs:attribute name="url" type="xs:string"/>
        
    <xs:attribute name="ex" type="xs:boolean"/>
        
    <xs:attribute name="ridZ" type="xs:string"/>
        
    <xs:attribute name="allDay" type="xs:boolean"/>
        
    <xs:attribute name="draft" type="xs:boolean"/>
        
    <xs:attribute name="neverSent" type="xs:boolean"/>
        
    <xs:attribute name="changes" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="geoInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="lat" type="xs:string"/>
        
    <xs:attribute name="lon" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="calendarAttendee">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="xparam" type="tns:xParam"/>
          
    </xs:sequence>
        
    <xs:attribute name="a" type="xs:string"/>
        
    <xs:attribute name="url" type="xs:string"/>
        
    <xs:attribute name="d" type="xs:string"/>
        
    <xs:attribute name="sentBy" type="xs:string"/>
        
    <xs:attribute name="dir" type="xs:string"/>
        
    <xs:attribute name="lang" type="xs:string"/>
        
    <xs:attribute name="cutype" type="xs:string"/>
        
    <xs:attribute name="role" type="xs:string"/>
        
    <xs:attribute name="ptst" type="xs:string"/>
        
    <xs:attribute name="rsvp" type="xs:boolean"/>
        
    <xs:attribute name="member" type="xs:string"/>
        
    <xs:attribute name="delTo" type="xs:string"/>
        
    <xs:attribute name="delFrom" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="xParam">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="value" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="alarmInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="trigger" type="tns:alarmTriggerInfo"/>
            
      <xs:element minOccurs="0" name="repeat" type="tns:durationInfo"/>
            
      <xs:element minOccurs="0" name="desc" type="xs:string"/>
            
      <xs:element minOccurs="0" name="attach" type="tns:calendarAttach"/>
            
      <xs:element minOccurs="0" name="summary" type="xs:string"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="at" type="tns:calendarAttendee"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="xprop" type="tns:xProp"/>
          
    </xs:sequence>
        
    <xs:attribute name="action" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="alarmTriggerInfo">
        
    <xs:all>
            
      <xs:element minOccurs="0" name="abs" type="tns:dateAttr"/>
            
      <xs:element minOccurs="0" name="rel" type="tns:durationInfo"/>
          
    </xs:all>
      
  </xs:complexType>
    
  <xs:complexType name="dateAttr">
        
    <xs:sequence/>
        
    <xs:attribute name="d" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="durationInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="neg" type="xs:boolean"/>
        
    <xs:attribute name="w" type="xs:int"/>
        
    <xs:attribute name="d" type="xs:int"/>
        
    <xs:attribute name="h" type="xs:int"/>
        
    <xs:attribute name="m" type="xs:int"/>
        
    <xs:attribute name="s" type="xs:int"/>
        
    <xs:attribute name="related" type="xs:string"/>
        
    <xs:attribute name="count" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="calendarAttach">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="uri" type="xs:string"/>
                
        <xs:attribute name="ct" type="xs:string"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="xProp">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="xparam" type="tns:xParam"/>
          
    </xs:sequence>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="value" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="calOrganizer">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="xparam" type="tns:xParam"/>
          
    </xs:sequence>
        
    <xs:attribute name="a" type="xs:string"/>
        
    <xs:attribute name="url" type="xs:string"/>
        
    <xs:attribute name="d" type="xs:string"/>
        
    <xs:attribute name="sentBy" type="xs:string"/>
        
    <xs:attribute name="dir" type="xs:string"/>
        
    <xs:attribute name="lang" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="recurrenceInfo">
        
    <xs:sequence>
            
      <xs:choice maxOccurs="unbounded" minOccurs="0">
                
        <xs:element name="add" type="tns:addRecurrenceInfo"/>
                
        <xs:element name="exclude" type="tns:excludeRecurrenceInfo"/>
                
        <xs:element name="except" type="tns:exceptionRuleInfo"/>
                
        <xs:element name="cancel" type="tns:cancelRuleInfo"/>
                
        <xs:element name="dates" type="tns:singleDates"/>
                
        <xs:element name="rule" type="tns:simpleRepeatingRule"/>
              
      </xs:choice>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="addRecurrenceInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:recurrenceInfo">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="excludeRecurrenceInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:recurrenceInfo">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="exceptionRuleInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:recurIdInfo">
                
        <xs:sequence>
                    
          <xs:element minOccurs="0" name="add" type="tns:recurrenceInfo"/>
                    
          <xs:element minOccurs="0" name="exclude" type="tns:recurrenceInfo"/>
                  
        </xs:sequence>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="recurIdInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="rangeType" type="xs:int" use="required"/>
        
    <xs:attribute name="recurId" type="xs:string" use="required"/>
        
    <xs:attribute name="tz" type="xs:string"/>
        
    <xs:attribute name="ridZ" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="cancelRuleInfo">
        
    <xs:complexContent>
            
      <xs:extension base="tns:recurIdInfo">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="singleDates">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="dtval" type="tns:dtVal"/>
          
    </xs:sequence>
        
    <xs:attribute name="tz" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="dtVal">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="s" type="tns:dtTimeInfo"/>
            
      <xs:element minOccurs="0" name="e" type="tns:dtTimeInfo"/>
            
      <xs:element minOccurs="0" name="dur" type="tns:durationInfo"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="dtTimeInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="d" type="xs:string"/>
        
    <xs:attribute name="tz" type="xs:string"/>
        
    <xs:attribute name="u" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="simpleRepeatingRule">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="until" type="tns:dateTimeStringAttr"/>
            
      <xs:element minOccurs="0" name="count" type="tns:numAttr"/>
            
      <xs:element minOccurs="0" name="interval" type="tns:intervalRule"/>
            
      <xs:element minOccurs="0" name="bysecond" type="tns:bySecondRule"/>
            
      <xs:element minOccurs="0" name="byminute" type="tns:byMinuteRule"/>
            
      <xs:element minOccurs="0" name="byhour" type="tns:byHourRule"/>
            
      <xs:element minOccurs="0" name="byday" type="tns:byDayRule"/>
            
      <xs:element minOccurs="0" name="bymonthday" type="tns:byMonthDayRule"/>
            
      <xs:element minOccurs="0" name="byyearday" type="tns:byYearDayRule"/>
            
      <xs:element minOccurs="0" name="byweekno" type="tns:byWeekNoRule"/>
            
      <xs:element minOccurs="0" name="bymonth" type="tns:byMonthRule"/>
            
      <xs:element minOccurs="0" name="bysetpos" type="tns:bySetPosRule"/>
            
      <xs:element minOccurs="0" name="wkst" type="tns:wkstRule"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="rule-x-name" type="tns:xNameRule"/>
          
    </xs:sequence>
        
    <xs:attribute name="freq" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="dateTimeStringAttr">
        
    <xs:sequence/>
        
    <xs:attribute name="d" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="numAttr">
        
    <xs:sequence/>
        
    <xs:attribute name="num" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="intervalRule">
        
    <xs:sequence/>
        
    <xs:attribute name="ival" type="xs:int" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="bySecondRule">
        
    <xs:sequence/>
        
    <xs:attribute name="seclist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="byMinuteRule">
        
    <xs:sequence/>
        
    <xs:attribute name="minlist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="byHourRule">
        
    <xs:sequence/>
        
    <xs:attribute name="hrlist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="byDayRule">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="wkday" type="tns:wkDay"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="wkDay">
        
    <xs:sequence/>
        
    <xs:attribute name="day" type="xs:string" use="required"/>
        
    <xs:attribute name="ordwk" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="byMonthDayRule">
        
    <xs:sequence/>
        
    <xs:attribute name="modaylist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="byYearDayRule">
        
    <xs:sequence/>
        
    <xs:attribute name="yrdaylist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="byWeekNoRule">
        
    <xs:sequence/>
        
    <xs:attribute name="wklist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="byMonthRule">
        
    <xs:sequence/>
        
    <xs:attribute name="molist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="bySetPosRule">
        
    <xs:sequence/>
        
    <xs:attribute name="poslist" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="wkstRule">
        
    <xs:sequence/>
        
    <xs:attribute name="day" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="xNameRule">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string"/>
        
    <xs:attribute name="value" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="exceptionRecurIdInfo">
        
    <xs:sequence/>
        
    <xs:attribute name="d" type="xs:string" use="required"/>
        
    <xs:attribute name="tz" type="xs:string"/>
        
    <xs:attribute name="rangeType" type="xs:int"/>
      
  </xs:complexType>
    
  <xs:complexType name="calendarReply">
        
    <xs:complexContent>
            
      <xs:extension base="tns:recurIdInfo">
                
        <xs:sequence/>
                
        <xs:attribute name="seq" type="xs:int" use="required"/>
                
        <xs:attribute name="d" type="xs:long" use="required"/>
                
        <xs:attribute name="at" type="xs:string" use="required"/>
                
        <xs:attribute name="sentBy" type="xs:string"/>
                
        <xs:attribute name="ptst" type="xs:string"/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="partInfo">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="content" type="xs:string"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="mp" type="tns:partInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="part" type="xs:string" use="required"/>
        
    <xs:attribute name="ct" type="xs:string" use="required"/>
        
    <xs:attribute name="s" type="xs:int"/>
        
    <xs:attribute name="cd" type="xs:string"/>
        
    <xs:attribute name="filename" type="xs:string"/>
        
    <xs:attribute name="ci" type="xs:string"/>
        
    <xs:attribute name="cl" type="xs:string"/>
        
    <xs:attribute name="body" type="xs:boolean"/>
        
    <xs:attribute name="truncated" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="shareNotification">
        
    <xs:complexContent>
            
      <xs:extension base="tns:notification">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType name="notification">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="content" type="xs:string"/>
          
    </xs:sequence>
        
    <xs:attribute name="truncated" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="dlSubscriptionNotification">
        
    <xs:complexContent>
            
      <xs:extension base="tns:notification">
                
        <xs:sequence/>
              
      </xs:extension>
          
    </xs:complexContent>
      
  </xs:complexType>
    
  <xs:complexType final="extension restriction" name="setCurrentVolumeRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="id" type="xs:short" use="required"/>
        
    <xs:attribute name="type" type="xs:short" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="setCurrentVolumeResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="setPasswordRequest">
        
    <xs:sequence>
            
      <xs:element name="dryRun" type="xs:boolean"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="newPassword" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="setPasswordResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="message" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="syncGalAccountRequest">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="account" type="tns:syncGalAccountSpec"/>
          
    </xs:sequence>
      
    <xs:attribute name="unusedCodeGenHelper" type="xs:string"/>
  </xs:complexType>
    
  <xs:complexType name="syncGalAccountSpec">
        
    <xs:sequence>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="datasource" type="tns:syncGalAccountDataSourceSpec"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="syncGalAccountDataSourceSpec">
        
    <xs:simpleContent>
            
      <xs:extension base="xs:string">
                
        <xs:attribute name="by" type="xs:string" use="required"/>
                
        <xs:attribute name="fullSync" type="xs:boolean"/>
                
        <xs:attribute name="reset" type="xs:boolean"/>
              
      </xs:extension>
          
    </xs:simpleContent>
      
  </xs:complexType>
    
  <xs:complexType name="syncGalAccountResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="undeployZimletRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="action" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="undeployZimletResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="unloadMailboxRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:name"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="unloadMailboxResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="unregisterMailboxMoveOutRequest">
        
    <xs:sequence>
            
      <xs:element name="account" type="tns:mailboxMoveSpec"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="unregisterMailboxMoveOutResponse">
        
    <xs:sequence/>
      
  </xs:complexType>
    
  <xs:complexType name="uploadDomCertRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="cert.aid" type="xs:string" use="required"/>
        
    <xs:attribute name="cert.filename" type="xs:string" use="required"/>
        
    <xs:attribute name="key.aid" type="xs:string" use="required"/>
        
    <xs:attribute name="key.filename" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="uploadDomCertResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="cert_content" type="xs:string"/>
        
    <xs:attribute name="key_content" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="uploadProxyCARequest">
        
    <xs:sequence/>
        
    <xs:attribute name="cert.aid" type="xs:string" use="required"/>
        
    <xs:attribute name="cert.filename" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="uploadProxyCAResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="cert_content" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="verifyCertKeyRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="cert" type="xs:string" use="required"/>
        
    <xs:attribute name="privkey" type="xs:string" use="required"/>
        
    <xs:attribute name="ca" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="verifyCertKeyResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="verifyResult" type="xs:string" use="required"/>
      
  </xs:complexType>
    
  <xs:complexType name="verifyIndexRequest">
        
    <xs:sequence>
            
      <xs:element name="mbox" type="tns:mailboxByAccountIdSelector"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="verifyIndexResponse">
        
    <xs:sequence>
            
      <xs:element name="status" type="xs:boolean"/>
            
      <xs:element name="message" type="xs:string"/>
          
    </xs:sequence>
      
  </xs:complexType>
    
  <xs:complexType name="verifyStoreManagerRequest">
        
    <xs:sequence/>
        
    <xs:attribute name="fileSize" type="xs:int"/>
        
    <xs:attribute name="num" type="xs:int"/>
        
    <xs:attribute name="checkBlobs" type="xs:boolean"/>
      
  </xs:complexType>
    
  <xs:complexType name="verifyStoreManagerResponse">
        
    <xs:sequence/>
        
    <xs:attribute name="storeManagerClass" type="xs:string"/>
        
    <xs:attribute name="incomingTime" type="xs:long"/>
        
    <xs:attribute name="stageTime" type="xs:long"/>
        
    <xs:attribute name="linkTime" type="xs:long"/>
        
    <xs:attribute name="fetchTime" type="xs:long"/>
        
    <xs:attribute name="deleteTime" type="xs:long"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAddressListInfoRequest">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string"/>
        
    <xs:attribute name="name" type="xs:string"/>
      
  </xs:complexType>
    
  <xs:complexType name="getAddressListInfoResponse">
        
    <xs:sequence>
            
      <xs:element minOccurs="0" name="desc" type="xs:string"/>
            
      <xs:element minOccurs="0" name="domain" type="tns:domainSelector"/>
            
      <xs:element minOccurs="0" name="searchFilter" type="tns:entrySearchFilterInfo"/>
          
    </xs:sequence>
        
    <xs:attribute name="id" type="xs:string" use="required"/>
        
    <xs:attribute name="name" type="xs:string" use="required"/>
        
    <xs:attribute name="type" type="ns1:galSearchType" use="required"/>
      
  </xs:complexType>
    
  <xs:simpleType name="domainBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="name"/>
            
      <xs:enumeration value="virtualHostname"/>
            
      <xs:enumeration value="krb5Realm"/>
            
      <xs:enumeration value="foreignName"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="galMode">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="both"/>
            
      <xs:enumeration value="ldap"/>
            
      <xs:enumeration value="zimbra"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="action">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="start"/>
            
      <xs:enumeration value="status"/>
            
      <xs:enumeration value="stop"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="status">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="started"/>
            
      <xs:enumeration value="running"/>
            
      <xs:enumeration value="idle"/>
            
      <xs:enumeration value="stopped"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="authScheme">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="basic"/>
            
      <xs:enumeration value="form"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="granteeBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="name"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="operation">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="start"/>
            
      <xs:enumeration value="stop"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="serverBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="name"/>
            
      <xs:enumeration value="serviceHostname"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="contactBackupStatus">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="started"/>
            
      <xs:enumeration value="error"/>
            
      <xs:enumeration value="stopped"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="cosBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="name"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="countObjectsType">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="userAccount"/>
            
      <xs:enumeration value="account"/>
            
      <xs:enumeration value="alias"/>
            
      <xs:enumeration value="dl"/>
            
      <xs:enumeration value="domain"/>
            
      <xs:enumeration value="cos"/>
            
      <xs:enumeration value="server"/>
            
      <xs:enumeration value="calresource"/>
            
      <xs:enumeration value="internalUserAccount"/>
            
      <xs:enumeration value="internalArchivingAccount"/>
            
      <xs:enumeration value="internalUserAccountX"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="dataSourceType">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="pop3"/>
            
      <xs:enumeration value="imap"/>
            
      <xs:enumeration value="caldav"/>
            
      <xs:enumeration value="contacts"/>
            
      <xs:enumeration value="yab"/>
            
      <xs:enumeration value="rss"/>
            
      <xs:enumeration value="cal"/>
            
      <xs:enumeration value="gal"/>
            
      <xs:enumeration value="xsync"/>
            
      <xs:enumeration value="tagmap"/>
            
      <xs:enumeration value="unknown"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="dedupAction">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="start"/>
            
      <xs:enumeration value="status"/>
            
      <xs:enumeration value="stop"/>
            
      <xs:enumeration value="reset"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="dedupStatus">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="running"/>
            
      <xs:enumeration value="stopped"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="xmppComponentBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="name"/>
            
      <xs:enumeration value="serviceHostname"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="cacheEntryBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="name"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="distributionListBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="name"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="rightType">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="preset"/>
            
      <xs:enumeration value="getAttrs"/>
            
      <xs:enumeration value="setAttrs"/>
            
      <xs:enumeration value="combo"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="rightClass">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="ALL"/>
            
      <xs:enumeration value="ADMIN"/>
            
      <xs:enumeration value="USER"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="calendarResourceBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="foreignPrincipal"/>
            
      <xs:enumeration value="name"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="getSessionsSortBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="nameAsc"/>
            
      <xs:enumeration value="nameDesc"/>
            
      <xs:enumeration value="createdAsc"/>
            
      <xs:enumeration value="createdDesc"/>
            
      <xs:enumeration value="accessedAsc"/>
            
      <xs:enumeration value="accessedDesc"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="zimletStatusSetting">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="enabled"/>
            
      <xs:enumeration value="disabled"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="habOp">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="create"/>
            
      <xs:enumeration value="rename"/>
            
      <xs:enumeration value="delete"/>
            
      <xs:enumeration value="list"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="queueAction">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="hold"/>
            
      <xs:enumeration value="release"/>
            
      <xs:enumeration value="delete"/>
            
      <xs:enumeration value="requeue"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="queueActionBy">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="id"/>
            
      <xs:enumeration value="query"/>
          
    </xs:restriction>
      
  </xs:simpleType>
    
  <xs:simpleType name="habGroupOp">
        
    <xs:restriction base="xs:string">
            
      <xs:enumeration value="move"/>
            
      <xs:enumeration value="assignSeniority"/>
          
    </xs:restriction>
      
  </xs:simpleType>
  
</xs:schema>
